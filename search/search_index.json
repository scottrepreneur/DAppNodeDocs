{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the DAppNode documentation DAppNode connects the decentralized internet by allowing a user to conveniently host P2P clients. What does the documentation contain? I am interested in DAppNode Take a look at the introduction to understand the problem that we are solving. We encourage you to try out DAppNode by cheking the install section I am a user Start by checking What can you do with DAppNode? . You can also to take a look at the user guide if you have doubts and how to use DAppNode. If you are having any problem, take a look at the troubleshooting and FAQs sections. If you can't manage to solve your problem, please don't hesitate to reach us on Github and Riot . I am a developer We highly encourage you to consider developing a DAppNode Package (DNP) so your DApp, node or idea can be distributed for all DAppNode users. Please, start by checking the DAppNodeSDK for an overview of the process. Also, you might be interested in other more technical resources about DAppNode: Architecture DNP Manifest Reference Contributing","title":"Home"},{"location":"#welcome-to-the-dappnode-documentation","text":"DAppNode connects the decentralized internet by allowing a user to conveniently host P2P clients.","title":"Welcome to the DAppNode documentation"},{"location":"#what-does-the-documentation-contain","text":"","title":"What does the documentation contain?"},{"location":"#i-am-interested-in-dappnode","text":"Take a look at the introduction to understand the problem that we are solving. We encourage you to try out DAppNode by cheking the install section","title":"I am interested in DAppNode"},{"location":"#i-am-a-user","text":"Start by checking What can you do with DAppNode? . You can also to take a look at the user guide if you have doubts and how to use DAppNode. If you are having any problem, take a look at the troubleshooting and FAQs sections. If you can't manage to solve your problem, please don't hesitate to reach us on Github and Riot .","title":"I am a user"},{"location":"#i-am-a-developer","text":"We highly encourage you to consider developing a DAppNode Package (DNP) so your DApp, node or idea can be distributed for all DAppNode users. Please, start by checking the DAppNodeSDK for an overview of the process. Also, you might be interested in other more technical resources about DAppNode: Architecture DNP Manifest Reference Contributing","title":"I am a developer"},{"location":"Migration to v0.2.0/","text":"DAppNode Migration guide to v0.2.0 DAppNode is continuously evolving to enhance the performance, security, and privacy delivered to #nodlers. That is why we are releasing DAppNode v0.2.0, which includes a switch from L2TP to OpenVPN. This is a more convenient VPN scheme for DAppNode users. We are committed to make the user experience as easy as possible. By following this guide you will be able to upgrade without any troubles despite the major change that breaks compatibility with the current VPN system. Important warning: :warning: L2TP and OpenVPN can not run at the same time , so once you update to OpenVPN, either with an installation script or using the Admin UI, your old credentials and VPN will not work anymore and you will not be able to access the Admin UI. But worry not ! Below you will find how to get credentials for OpenVPN whether you have access to your physical device or not :warning: Quickguide Refer to the sections below for more detailed information Get an OpenVPN client for your machine (see recommended clients and download links below ). If you usually connect via WIFI and do not use the VPN you can skip this step. Execute the migration (either through the ADMIN UI hitting the \"Update\" button connected via WIFI or VPN; or via script connecting via ssh or directly with a keyboard screen to your console) Allow some minutes to complete the installation. Please note that :warning: The update progress indicator will never show the end of the update. Since a new VPN package will be installed, the current VPN connection will be lost and the Admin UI will stop refreshing. Allow for a couple of minutes after this happens to make sure all packages are installed correctly and proceed to the next step :warning: Connect to your machine via a) ssh (if you do not have physical access to your DAppNode) b) WIFI Hotspot (if you have access to your physical machine) c) connecting a keyboard and a screen to your DAppNode and logging in. After you connect via ssh or logging in to your server, you will immediately receive a link to your new OpenVPN credentials. Copy paste and access it to download the credentials file (.ovpn). If you are connected via WIFI you can get your new link to download the OpenVPN credentials from the devices tab. Double click the credentials file you just obtained in the previous step. Your OpenVPN client will import the file and you can already click in \"connect\". Once connected you can type http://my.dappnode to access the UI. If you do not see the complete interface just refresh the screen -the old interface might be in cache! Welcome to your DAppNode v0.2.0! Detailed explanation Step 1: Install an OpenVPN client You can skip this step if you use the connection via the WIFI hotspot. Open VPN client installation guides and the recommended OpenVPN clients for each OS MacOS guide - Tunnelblick client iOS guide - OpenVPN connect client Windows guide - OpenVPN (community installer) client Android guide - OpenVPN for Android client Linux guide - It's natively included in recent versions. Step 2: How to upgrade to DAppNode v0.2.0 (OpenVPN) Now that you already have your OpenVPN client you are ready to update your DAppNode and receive your new OpenVPN credentials, in case you use them. If not you can go on connecting to your DAppNode via WIFI. You have three methods to upgrade and regain access to your DAppNode with OpenVPN if you use it: There are three methods depending on your level of comfort or your setup: Without VPN . The easiest way if you can connect to your DAppNode via the built-in WIFI hotspot. Through VPN . The standard way if you connect through a client device . Via Script . If you are comfortable with the terminal/command line, and have physical or ssh access to your server. Method 1: via WIFI hotspot (No VPN Connection) If you have a physical DAppNode and can connect your client device to the WIFI hotspot, you have it the easiest of all: Just hit the update button while connected to the Admin UI of the server via WIFI and not VPN . At the end of the update go to the devices tab and access the link to download and install your newly generated OpenVPN credentials to connect to your DAppNode when you do not have access to the WIFI hotspot. Method 2: Connected through VPN :warning: L2TP and OpenVPN can not run at the same time , so once you update to OpenVPN, either with an installation script or using the Admin UI, your old credentials and VPN will not work anymore and you will not be able to access the Admin UI. But worry not ! Below you will find how to get credentials for OpenVPN whether you have access to your physical device or not :warning: You will find an update button in your Admin UI. After installing your OpenVPN client, go ahead, hit that update button! Info The update progress indicator will never show the end of the update. Since a new VPN package will be installed, the current VPN connection will be lost and the Admin UI will stop refreshing. Allow for a few minutes after this happens to make sure all packages are installed correctly and proceed to the next step As noted above after a while after hitting update you will be disconnected from the old VPN. Please wait 5 minutes (aprox.) to make sure that all the new packages are deployed, and you can get the new credentials you need. You can get them in 3 ways, depending on whether you have physical access to your machine and can connect your client device to the WIFI hotspot or not: I can access my server device and connect my client to the WIFI hotspot . In this case, connect to the WIFI hotspot and generate new credentials under the devices tab. I can physically access my server device but not connect to the WiFi hotspot . Connecting a keyboard and a screen and logging in to your DAppNode will show you a new link and QR from where you can download your new OpenVPN credentials. I cannot physically access my DAppNode . You need to access your machine via ssh and you will get your new credentials in the terminal screen. To connect via ssh just open your client device command line/terminal and type ssh username@yourServerIP . Once you are connected to the server through one of methods 2-3 above you will find a new URL from which you will be able to download your new credentials file. Access the provided link and download the ovpn file in your client machine. In case you can connect via WIFI, you can directly get the new credentials from the devices tab. When you enter the new credentials link you will see this screen. In case you have problems accessing check that you have the ports of the router open: I can\u2019t access the credentials OTP web link to download the .ovpn file Download the file, double click on it and you will be connected to your new OpenVPN profile (provided that you already have installed your OpenVPN client in step 1). Access again your Admin UI . Method 3: Via script with physical access or via ssh If you feel comfortable with the terminal/command line or can not connect to your DAppNode server through the WIFI hotspot, you can do the update and immediately get your new OpenVPN credentials following the next steps: Open your server terminal and run the following command sudo wget -O - https://installer.dappnode.io | sudo UPDATE=true bash You can do this directly over your server connecting a keyboard and a screen or connecting through ssh. In both cases you will get a new link and QR to the web from where you have to download your new credentials In case you have problems accessing check that you have the ports of the router open: I can\u2019t access the credentials OTP web link to download the .ovpn file Download the file, double click it and you will be connected to your newly added OpenVPN profile (provided that you already have installed your OpenVPN client in step 1). Access again your Admin UI . If something goes wrong make sure you check the Troubleshooting section below! Troubleshooting This section will be continuously updated as we detect more common issues: After connecting via ssh or logging to my machine I get old L2TP credentials that can't be opened in my OpenVPN client. The new VPN package has not finished the installation and it is not running yet, so you get old credentials again. Just wait a few minutes and connect again via SSH. Once the new VPN package is running you will get your brand new OpenVPN credentials. You can check that the migration has been correctly performed and that you are getting the new OpenVPN credentials by typing in the server terminal docker ps --format \"{{.Image}}\" and checking that the installed core packages have the mention 0.2.x root@DAppNode:# docker ps --format \" {{ .Image }} \" wifi.dnp.dappnode.eth:0.2.0 ipfs.dnp.dappnode.eth:0.2.0 wamp.dnp.dappnode.eth:0.2.0 admin.dnp.dappnode.eth:00.2.0 dappmanager.dnp.dappnode.eth:0.2.0 bind.dnp.dappnode.eth:0.2.0 ethchain.dnp.dappnode.eth:0.2.0 vpn.dnp.dappnode.eth:0.2.0 ethforward.dnp.dappnode.eth:0.2.0 I can't access the credentials OTP web link to download the .ovpn file For the credentials file to be correctly downloaded you need to have port 8090 TCP opened, please check that the following ports are opened in the router to which your server is connected Service TCP UDP VPN (OpenVPN) 8090 1194 Ethereum Node 30303 30303 IPFS 4001 4002 I have a message in the console saying that admin credentials expired Once a file with credentials is downloaded, and used for connecting once, the link expires after that first connection and you see that message. If for any reason you need to get new credentials, connect via ssh to the server and run the command dappnode_get dappnode_admin If you get a command not found message you can run docker exec - ti DAppNodeCore - vpn . dnp . dappnode . eth vpncli get dappnode_admin I can't import the file in Linux Open VPN client. Make sure you have the network-manager-openvpn and network-manager-openvpn-gnome packages installed. See instructions for Linux here . The complete user guide of DAppNode v0.2.0 can be found here .","title":"Migration to v0.2.0"},{"location":"Migration to v0.2.0/#dappnode-migration-guide-to-v020","text":"DAppNode is continuously evolving to enhance the performance, security, and privacy delivered to #nodlers. That is why we are releasing DAppNode v0.2.0, which includes a switch from L2TP to OpenVPN. This is a more convenient VPN scheme for DAppNode users. We are committed to make the user experience as easy as possible. By following this guide you will be able to upgrade without any troubles despite the major change that breaks compatibility with the current VPN system.","title":"DAppNode Migration guide to v0.2.0"},{"location":"Migration to v0.2.0/#important-warning","text":":warning: L2TP and OpenVPN can not run at the same time , so once you update to OpenVPN, either with an installation script or using the Admin UI, your old credentials and VPN will not work anymore and you will not be able to access the Admin UI. But worry not ! Below you will find how to get credentials for OpenVPN whether you have access to your physical device or not :warning:","title":"Important warning:"},{"location":"Migration to v0.2.0/#quickguide","text":"Refer to the sections below for more detailed information Get an OpenVPN client for your machine (see recommended clients and download links below ). If you usually connect via WIFI and do not use the VPN you can skip this step. Execute the migration (either through the ADMIN UI hitting the \"Update\" button connected via WIFI or VPN; or via script connecting via ssh or directly with a keyboard screen to your console) Allow some minutes to complete the installation. Please note that :warning: The update progress indicator will never show the end of the update. Since a new VPN package will be installed, the current VPN connection will be lost and the Admin UI will stop refreshing. Allow for a couple of minutes after this happens to make sure all packages are installed correctly and proceed to the next step :warning: Connect to your machine via a) ssh (if you do not have physical access to your DAppNode) b) WIFI Hotspot (if you have access to your physical machine) c) connecting a keyboard and a screen to your DAppNode and logging in. After you connect via ssh or logging in to your server, you will immediately receive a link to your new OpenVPN credentials. Copy paste and access it to download the credentials file (.ovpn). If you are connected via WIFI you can get your new link to download the OpenVPN credentials from the devices tab. Double click the credentials file you just obtained in the previous step. Your OpenVPN client will import the file and you can already click in \"connect\". Once connected you can type http://my.dappnode to access the UI. If you do not see the complete interface just refresh the screen -the old interface might be in cache! Welcome to your DAppNode v0.2.0!","title":"Quickguide"},{"location":"Migration to v0.2.0/#detailed-explanation","text":"","title":"Detailed explanation"},{"location":"Migration to v0.2.0/#step-1-install-an-openvpn-client","text":"You can skip this step if you use the connection via the WIFI hotspot.","title":"Step 1: Install an OpenVPN client"},{"location":"Migration to v0.2.0/#open-vpn-client-installation-guides-and-the-recommended-openvpn-clients-for-each-os","text":"MacOS guide - Tunnelblick client iOS guide - OpenVPN connect client Windows guide - OpenVPN (community installer) client Android guide - OpenVPN for Android client Linux guide - It's natively included in recent versions.","title":"Open VPN client installation guides and the recommended OpenVPN clients for each OS"},{"location":"Migration to v0.2.0/#step-2-how-to-upgrade-to-dappnode-v020-openvpn","text":"Now that you already have your OpenVPN client you are ready to update your DAppNode and receive your new OpenVPN credentials, in case you use them. If not you can go on connecting to your DAppNode via WIFI. You have three methods to upgrade and regain access to your DAppNode with OpenVPN if you use it: There are three methods depending on your level of comfort or your setup: Without VPN . The easiest way if you can connect to your DAppNode via the built-in WIFI hotspot. Through VPN . The standard way if you connect through a client device . Via Script . If you are comfortable with the terminal/command line, and have physical or ssh access to your server.","title":"Step 2: How to upgrade to DAppNode v0.2.0 (OpenVPN)"},{"location":"Migration to v0.2.0/#method-1-via-wifi-hotspot-no-vpn-connection","text":"If you have a physical DAppNode and can connect your client device to the WIFI hotspot, you have it the easiest of all: Just hit the update button while connected to the Admin UI of the server via WIFI and not VPN . At the end of the update go to the devices tab and access the link to download and install your newly generated OpenVPN credentials to connect to your DAppNode when you do not have access to the WIFI hotspot.","title":"Method 1: via WIFI hotspot (No VPN Connection)"},{"location":"Migration to v0.2.0/#method-2-connected-through-vpn","text":":warning: L2TP and OpenVPN can not run at the same time , so once you update to OpenVPN, either with an installation script or using the Admin UI, your old credentials and VPN will not work anymore and you will not be able to access the Admin UI. But worry not ! Below you will find how to get credentials for OpenVPN whether you have access to your physical device or not :warning: You will find an update button in your Admin UI. After installing your OpenVPN client, go ahead, hit that update button! Info The update progress indicator will never show the end of the update. Since a new VPN package will be installed, the current VPN connection will be lost and the Admin UI will stop refreshing. Allow for a few minutes after this happens to make sure all packages are installed correctly and proceed to the next step As noted above after a while after hitting update you will be disconnected from the old VPN. Please wait 5 minutes (aprox.) to make sure that all the new packages are deployed, and you can get the new credentials you need. You can get them in 3 ways, depending on whether you have physical access to your machine and can connect your client device to the WIFI hotspot or not: I can access my server device and connect my client to the WIFI hotspot . In this case, connect to the WIFI hotspot and generate new credentials under the devices tab. I can physically access my server device but not connect to the WiFi hotspot . Connecting a keyboard and a screen and logging in to your DAppNode will show you a new link and QR from where you can download your new OpenVPN credentials. I cannot physically access my DAppNode . You need to access your machine via ssh and you will get your new credentials in the terminal screen. To connect via ssh just open your client device command line/terminal and type ssh username@yourServerIP . Once you are connected to the server through one of methods 2-3 above you will find a new URL from which you will be able to download your new credentials file. Access the provided link and download the ovpn file in your client machine. In case you can connect via WIFI, you can directly get the new credentials from the devices tab. When you enter the new credentials link you will see this screen. In case you have problems accessing check that you have the ports of the router open: I can\u2019t access the credentials OTP web link to download the .ovpn file Download the file, double click on it and you will be connected to your new OpenVPN profile (provided that you already have installed your OpenVPN client in step 1). Access again your Admin UI .","title":"Method 2: Connected through VPN"},{"location":"Migration to v0.2.0/#method-3-via-script-with-physical-access-or-via-ssh","text":"If you feel comfortable with the terminal/command line or can not connect to your DAppNode server through the WIFI hotspot, you can do the update and immediately get your new OpenVPN credentials following the next steps: Open your server terminal and run the following command sudo wget -O - https://installer.dappnode.io | sudo UPDATE=true bash You can do this directly over your server connecting a keyboard and a screen or connecting through ssh. In both cases you will get a new link and QR to the web from where you have to download your new credentials In case you have problems accessing check that you have the ports of the router open: I can\u2019t access the credentials OTP web link to download the .ovpn file Download the file, double click it and you will be connected to your newly added OpenVPN profile (provided that you already have installed your OpenVPN client in step 1). Access again your Admin UI . If something goes wrong make sure you check the Troubleshooting section below!","title":"Method 3: Via script with physical access or via ssh"},{"location":"Migration to v0.2.0/#troubleshooting","text":"This section will be continuously updated as we detect more common issues:","title":"Troubleshooting"},{"location":"Migration to v0.2.0/#after-connecting-via-ssh-or-logging-to-my-machine-i-get-old-l2tp-credentials-that-cant-be-opened-in-my-openvpn-client","text":"The new VPN package has not finished the installation and it is not running yet, so you get old credentials again. Just wait a few minutes and connect again via SSH. Once the new VPN package is running you will get your brand new OpenVPN credentials. You can check that the migration has been correctly performed and that you are getting the new OpenVPN credentials by typing in the server terminal docker ps --format \"{{.Image}}\" and checking that the installed core packages have the mention 0.2.x root@DAppNode:# docker ps --format \" {{ .Image }} \" wifi.dnp.dappnode.eth:0.2.0 ipfs.dnp.dappnode.eth:0.2.0 wamp.dnp.dappnode.eth:0.2.0 admin.dnp.dappnode.eth:00.2.0 dappmanager.dnp.dappnode.eth:0.2.0 bind.dnp.dappnode.eth:0.2.0 ethchain.dnp.dappnode.eth:0.2.0 vpn.dnp.dappnode.eth:0.2.0 ethforward.dnp.dappnode.eth:0.2.0","title":"After connecting via ssh or logging to my machine I get old L2TP credentials that can't be opened in my OpenVPN client."},{"location":"Migration to v0.2.0/#i-cant-access-the-credentials-otp-web-link-to-download-the-ovpn-file","text":"For the credentials file to be correctly downloaded you need to have port 8090 TCP opened, please check that the following ports are opened in the router to which your server is connected Service TCP UDP VPN (OpenVPN) 8090 1194 Ethereum Node 30303 30303 IPFS 4001 4002","title":"I can't access the credentials OTP web link to download the .ovpn file"},{"location":"Migration to v0.2.0/#i-have-a-message-in-the-console-saying-that-admin-credentials-expired","text":"Once a file with credentials is downloaded, and used for connecting once, the link expires after that first connection and you see that message. If for any reason you need to get new credentials, connect via ssh to the server and run the command dappnode_get dappnode_admin If you get a command not found message you can run docker exec - ti DAppNodeCore - vpn . dnp . dappnode . eth vpncli get dappnode_admin","title":"I have a message in the console saying that admin credentials expired"},{"location":"Migration to v0.2.0/#i-cant-import-the-file-in-linux-open-vpn-client","text":"Make sure you have the network-manager-openvpn and network-manager-openvpn-gnome packages installed. See instructions for Linux here . The complete user guide of DAppNode v0.2.0 can be found here .","title":"I can't import the file in Linux Open VPN client."},{"location":"architecture/","text":"Architecture DAppNode is a collection of interdependent docker containerized packages (referred here as core DNPs). DAppNode's core DNPs are: DNP_BIND DNP_VPN DNP_ETHCHAIN DNP_ETHFORWARD DNP_IPFS DNP_WAMP DNP_ADMIN DNP_DAPPMANAGER BIND Local DAppNode DNS. Links each package docker IP to a name in the format of my.[package-name].dnp.dappnode.eth. It also redirects .eth domains to the Ethforward. All rules can be consulted at eth.hosts <https://github.com/dappnode/DNP_BIND/raw/master/build/bind/eth.hosts> _. It runs the native Linux bind package with a configuration specified at named.conf <https://github.com/dappnode/DNP_BIND/raw/master/build/bind/named.conf> _. It attempts resolution and otherwise forwards to the Google Public DNS 8.8.8.8 / 8.8.4.4. VPN Provides a basic VPN for users to consume DAppNode's services. It runs a xl2tpd <https://github.com/xelerance/xl2tpd> process alongside a NodeJS app, both controlled by a supervisord process. The NodeJS app connects with the WAMP to manage VPN users directly editing the /etc/ppp/chap-secrets <http://l4u-00.jinr.ru/usoft/WWW/HOWTO/PPP-HOWTO-13.html> file, which holds the users' credentials. The user IP is static and set when that user is created. The static IP is used by the WAMP for authentication to allow only admin users to perform certain actions. Currently, there are three types of users: 172.33.10.1: Super admin. It is created when DAppNode is installed and can never be deleted 172.33.10.x: Admin user. 172.33.100.x: Non-admin user. ETHCHAIN Local full mainnet Ethereum node. Right now it uses parity, but we are testing Geth against Parity to take a decision based on each client's efficiency, memory usage, time to use among other parameters. ETHFORWARD Resolves .eth domains by intercepting outgoing requests, calling ENS, and redirecting to the local IPFS node. It is a NodeJS HTTP proxy server, which also returns custom 404 pages if the content is not found or available or if the chain is still not synced. IPFS Local IFPS node. Its gateway is available at: host : my . ipfs . dnp . dappnode . eth ; port : 5001 ; protocol : http ; WAMP Handles inter-package communications. Restricts certain operations to only admin users. We are using crossbar.io <https://crossbar.io> and its javascript client autobahn.js <https://github.com/crossbario/autobahn-js> . Please refer to their documentation for more details. DAPPMANAGER Installs and manages DAppNode packages (DNPs). It's a Nodejs app whose procedures are only consumed by the ADMIN and depends on IPFS and ETHCHAIN to function. ADMIN Handles admin users <-> DAppNode interactions, such as managing packages or VPN users. It is an NGINX process that serves a single-page React app that consumes RPCs of the DAPPMANAGER and the VPN.","title":"Architecture"},{"location":"architecture/#architecture","text":"DAppNode is a collection of interdependent docker containerized packages (referred here as core DNPs). DAppNode's core DNPs are: DNP_BIND DNP_VPN DNP_ETHCHAIN DNP_ETHFORWARD DNP_IPFS DNP_WAMP DNP_ADMIN DNP_DAPPMANAGER","title":"Architecture"},{"location":"architecture/#bind","text":"Local DAppNode DNS. Links each package docker IP to a name in the format of my.[package-name].dnp.dappnode.eth. It also redirects .eth domains to the Ethforward. All rules can be consulted at eth.hosts <https://github.com/dappnode/DNP_BIND/raw/master/build/bind/eth.hosts> _. It runs the native Linux bind package with a configuration specified at named.conf <https://github.com/dappnode/DNP_BIND/raw/master/build/bind/named.conf> _. It attempts resolution and otherwise forwards to the Google Public DNS 8.8.8.8 / 8.8.4.4.","title":"BIND"},{"location":"architecture/#vpn","text":"Provides a basic VPN for users to consume DAppNode's services. It runs a xl2tpd <https://github.com/xelerance/xl2tpd> process alongside a NodeJS app, both controlled by a supervisord process. The NodeJS app connects with the WAMP to manage VPN users directly editing the /etc/ppp/chap-secrets <http://l4u-00.jinr.ru/usoft/WWW/HOWTO/PPP-HOWTO-13.html> file, which holds the users' credentials. The user IP is static and set when that user is created. The static IP is used by the WAMP for authentication to allow only admin users to perform certain actions. Currently, there are three types of users: 172.33.10.1: Super admin. It is created when DAppNode is installed and can never be deleted 172.33.10.x: Admin user. 172.33.100.x: Non-admin user.","title":"VPN"},{"location":"architecture/#ethchain","text":"Local full mainnet Ethereum node. Right now it uses parity, but we are testing Geth against Parity to take a decision based on each client's efficiency, memory usage, time to use among other parameters.","title":"ETHCHAIN"},{"location":"architecture/#ethforward","text":"Resolves .eth domains by intercepting outgoing requests, calling ENS, and redirecting to the local IPFS node. It is a NodeJS HTTP proxy server, which also returns custom 404 pages if the content is not found or available or if the chain is still not synced.","title":"ETHFORWARD"},{"location":"architecture/#ipfs","text":"Local IFPS node. Its gateway is available at: host : my . ipfs . dnp . dappnode . eth ; port : 5001 ; protocol : http ;","title":"IPFS"},{"location":"architecture/#wamp","text":"Handles inter-package communications. Restricts certain operations to only admin users. We are using crossbar.io <https://crossbar.io> and its javascript client autobahn.js <https://github.com/crossbario/autobahn-js> . Please refer to their documentation for more details.","title":"WAMP"},{"location":"architecture/#dappmanager","text":"Installs and manages DAppNode packages (DNPs). It's a Nodejs app whose procedures are only consumed by the ADMIN and depends on IPFS and ETHCHAIN to function.","title":"DAPPMANAGER"},{"location":"architecture/#admin","text":"Handles admin users <-> DAppNode interactions, such as managing packages or VPN users. It is an NGINX process that serves a single-page React app that consumes RPCs of the DAPPMANAGER and the VPN.","title":"ADMIN"},{"location":"connect/","text":"Connect to DAppNode's OpenVPN Via VPN For connecting to DAppNode 0.2.0 OpenVPN, you will need to have a client that supports the OpenVPN protocol in every device with which you\u00b4d like to connect to your DAppNode. Also note that if you are running DAppNode in a physical server with WIFI you can connect to your DAppNode without need of the VPN, just by connecting to the DAppNode WIFI. Once you have your DAppNode running, you will get an URL in your terminal from where you can download the OVPN config file and open it in your device with your OpenVPN client. If you have still not installed your OpenVPN client . Just download the credentials file and follow the instructions. Opening this OVPN file will configure your VPN connection to your DAppNode from your device. The first device VPN connection will have super admin privileges so you can access and manage the DAppNode admin UI; this user cannot be deleted. Take into account that some VPN clients might send all traffic through the VPN, which is not very ideal if you have many people connected to your DAppNode, or only to send traffic which points to an ETH domain. DAppNode is not intended to manage all the traffic of the devices connected to it, only the ETH domains access requests. Info When you download and install a VPN credentials file, only your ETH traffic will be going out through the VPN, the regular IP traffic will still be done with your regular IP. If you want to route all your Internet traffic through your DAppNode so you are behind your VPN, you should configure it in your VPN client settings by checking the Box \"Send all traffic\". These are the recommended Open VPN clients for each OS: Mac os: Tunnelblick Ios: Open VPN connect Windows: Open VPN (community installer) Android: Open VPN for Android Linux: Already included in recent versions. Depending on your OS these are the instructions for installing our recommended OpenVPN clients. Info Please note that for the ovpn to be correctly downloaded from the link given you will need to have the TCP port 8090 opened and that the default port to connect via OpenVPN is 1194 UDP. UPnP should have opened them for you if your router has UPnp enabled, if not you will have to open them manually Linux Ubuntu / NetworkManager OpenVPN comes installed in Ubuntu recent versions, but to be sure, follow these steps. Run the terminal application: Install OpenVPN and plugin for NetworkManager: sudo apt - get install network - manager - openvpn - gnome openvpn Once the installation is complete, restart Network Manager by typing: sudo service network - manager restart Go to \"Settings -> Network\" and click to the \"+\" button to add a VPN connection: Select \"Import from file...\" Browse the filesystem to select the downloaded file: Add the profile with the default settings: Now you can connect selecting the profile from the network tray icon: MacOS The recommended OpenVPN client is Tunnelblick and you can download it here Once you have followed the steps to install the tunnelblick client in your MAC, download the file from the URL given in the console to download the OVPN file with your credentials. If you have already downloaded the config file before installing Tunnelblick, you can select the \"I have a config file\" option and browse to its location. If not, once you have downloaded the OVPN file, just double click on it and Tunnelblick will add the config for you. Select your preferred option about the users that will have access to the config. The system will probably ask for your admin password to install the VPN configuration, and it is done! Just open Tunnelblick in your MAC and click on Connect DAppNode. Once connected you can already access http://my.admin.dnp.dappnode.eth with your new OpenVPN connection! iOS The recommended OpenVPN client is OpenVPN Connect and you can download it here Once you have installed it you can just scan the QR code and hit download: and click in \"Open in OpenVPN\" Tap the add button and name your connection The phone will ask you permission for OpenVPN to add a configuration profile , please do. And it is done, you can just connect to your new OpenVPN now After a few seconds, you will see in the OpenVPN interface that you are connected. You can either connect to your server through the OpenVPN app or directly from the phone\u00b4s \"VPN\" menu in \"Settings\" Once connected you can access http://my.admin.dnp.dappnode.eth with your new OpenVPN connection! Android Install OpenVPN for Android from Google Play or F-Droid : Download the OpenVPN profile from the URL or scanned QR code: Open the downloaded file and import it to the application, then save it with your preferred name: Select the saved profile to connect to it: Accept the connection request: You should see a connection log similar to this: Once connected, you should be able to browse the DAppNode Admin page: http://my.admin.dnp.dappnode.eth Windows Download the recommended client for OpenVPN WINDOWS INSTALLER (NSIS) and follow the steps to install it: Download the file from the provided link by the DAppNode administrator. Run the OpenVPN GUI program: Select \"Import file...\" from the tray bar icon (right click): Select the downloaded file: Finally, select \"Connect\" from the tray bar icon menu: Via WIFI Connect to DAppNode via the built-in Wifi hotspot If you have your DAppNode installed in a physical device with Wi-Fi, you can directly connect to your server's Admin UI by connecting your client device to the DAppNode's wifi hotspot. When you connect your DAppNode server to your router via Ethernet you will see a network called DAppNodeWIFI, just connect to that Wifi using the defaul password \"dappnode\" and you will have direct access to your DappNode server ADMIN UI while connected to that WIFI. Warning Please immediately change the name of the WIFI and the password by setting up the new values in the WIFI package under the system tab. Once you have entered the admin UI you can download your VPN credentials and create new ones under the \"devices\" tab Now it is time\u2026","title":"Connect to DAppNode"},{"location":"connect/#connect-to-dappnodes-openvpn","text":"","title":"Connect to DAppNode's OpenVPN"},{"location":"connect/#via-vpn","text":"For connecting to DAppNode 0.2.0 OpenVPN, you will need to have a client that supports the OpenVPN protocol in every device with which you\u00b4d like to connect to your DAppNode. Also note that if you are running DAppNode in a physical server with WIFI you can connect to your DAppNode without need of the VPN, just by connecting to the DAppNode WIFI. Once you have your DAppNode running, you will get an URL in your terminal from where you can download the OVPN config file and open it in your device with your OpenVPN client. If you have still not installed your OpenVPN client . Just download the credentials file and follow the instructions. Opening this OVPN file will configure your VPN connection to your DAppNode from your device. The first device VPN connection will have super admin privileges so you can access and manage the DAppNode admin UI; this user cannot be deleted. Take into account that some VPN clients might send all traffic through the VPN, which is not very ideal if you have many people connected to your DAppNode, or only to send traffic which points to an ETH domain. DAppNode is not intended to manage all the traffic of the devices connected to it, only the ETH domains access requests. Info When you download and install a VPN credentials file, only your ETH traffic will be going out through the VPN, the regular IP traffic will still be done with your regular IP. If you want to route all your Internet traffic through your DAppNode so you are behind your VPN, you should configure it in your VPN client settings by checking the Box \"Send all traffic\". These are the recommended Open VPN clients for each OS: Mac os: Tunnelblick Ios: Open VPN connect Windows: Open VPN (community installer) Android: Open VPN for Android Linux: Already included in recent versions. Depending on your OS these are the instructions for installing our recommended OpenVPN clients. Info Please note that for the ovpn to be correctly downloaded from the link given you will need to have the TCP port 8090 opened and that the default port to connect via OpenVPN is 1194 UDP. UPnP should have opened them for you if your router has UPnp enabled, if not you will have to open them manually","title":"Via VPN"},{"location":"connect/#linux","text":"","title":"Linux"},{"location":"connect/#ubuntu-networkmanager","text":"OpenVPN comes installed in Ubuntu recent versions, but to be sure, follow these steps. Run the terminal application: Install OpenVPN and plugin for NetworkManager: sudo apt - get install network - manager - openvpn - gnome openvpn Once the installation is complete, restart Network Manager by typing: sudo service network - manager restart Go to \"Settings -> Network\" and click to the \"+\" button to add a VPN connection: Select \"Import from file...\" Browse the filesystem to select the downloaded file: Add the profile with the default settings: Now you can connect selecting the profile from the network tray icon:","title":"Ubuntu / NetworkManager"},{"location":"connect/#macos","text":"The recommended OpenVPN client is Tunnelblick and you can download it here Once you have followed the steps to install the tunnelblick client in your MAC, download the file from the URL given in the console to download the OVPN file with your credentials. If you have already downloaded the config file before installing Tunnelblick, you can select the \"I have a config file\" option and browse to its location. If not, once you have downloaded the OVPN file, just double click on it and Tunnelblick will add the config for you. Select your preferred option about the users that will have access to the config. The system will probably ask for your admin password to install the VPN configuration, and it is done! Just open Tunnelblick in your MAC and click on Connect DAppNode. Once connected you can already access http://my.admin.dnp.dappnode.eth with your new OpenVPN connection!","title":"MacOS"},{"location":"connect/#ios","text":"The recommended OpenVPN client is OpenVPN Connect and you can download it here Once you have installed it you can just scan the QR code and hit download: and click in \"Open in OpenVPN\" Tap the add button and name your connection The phone will ask you permission for OpenVPN to add a configuration profile , please do. And it is done, you can just connect to your new OpenVPN now After a few seconds, you will see in the OpenVPN interface that you are connected. You can either connect to your server through the OpenVPN app or directly from the phone\u00b4s \"VPN\" menu in \"Settings\" Once connected you can access http://my.admin.dnp.dappnode.eth with your new OpenVPN connection!","title":"iOS"},{"location":"connect/#android","text":"Install OpenVPN for Android from Google Play or F-Droid : Download the OpenVPN profile from the URL or scanned QR code: Open the downloaded file and import it to the application, then save it with your preferred name: Select the saved profile to connect to it: Accept the connection request: You should see a connection log similar to this: Once connected, you should be able to browse the DAppNode Admin page: http://my.admin.dnp.dappnode.eth","title":"Android"},{"location":"connect/#windows","text":"Download the recommended client for OpenVPN WINDOWS INSTALLER (NSIS) and follow the steps to install it: Download the file from the provided link by the DAppNode administrator. Run the OpenVPN GUI program: Select \"Import file...\" from the tray bar icon (right click): Select the downloaded file: Finally, select \"Connect\" from the tray bar icon menu:","title":"Windows"},{"location":"connect/#via-wifi","text":"","title":"Via WIFI"},{"location":"connect/#connect-to-dappnode-via-the-built-in-wifi-hotspot","text":"If you have your DAppNode installed in a physical device with Wi-Fi, you can directly connect to your server's Admin UI by connecting your client device to the DAppNode's wifi hotspot. When you connect your DAppNode server to your router via Ethernet you will see a network called DAppNodeWIFI, just connect to that Wifi using the defaul password \"dappnode\" and you will have direct access to your DappNode server ADMIN UI while connected to that WIFI. Warning Please immediately change the name of the WIFI and the password by setting up the new values in the WIFI package under the system tab. Once you have entered the admin UI you can download your VPN credentials and create new ones under the \"devices\" tab Now it is time\u2026","title":"Connect to DAppNode via the built-in Wifi hotspot"},{"location":"contributing/","text":"Contributing Help is always appreciated! In particular, we need help in the following areas: Improving the documentation Fixing and responding to DAppNode's GitHub issues , especially those tagged as Good first issue which are meant as introductory issues for external contributors. How to Contribute When bringing people on as contributors we prefer that they start with an issue tagged good first issue . After a contributor has shown they're a good fit and have completed 1 or 2 issues labeled good first issue with pull requests that have been accepted feel free of moving on to other issues. We're thrilled to see new contributors. In order to get the repositories setup before contributions refer to the README.md file. Find a suitable issue If this is your first-time look for an issue labeled good first issue otherwise look for issues labeled help wanted . If another issue jumps out at you please engage on the issue before starting it. Assign yourself the issue Let us know you're working on it! We hate wasted labor so it's always helpful to know what our community contributors are working on. Fork and clone DAppNode In general, it's a good practice to fork into your own repository. We prefer if issues are addressed in a branch with the issue number in its name. i.e. 29_this_is_an_issue Make contributions Make all the changes needed to address the given issue. Add testing In general, we aim for full test coverage. For this reason, most issues completed should include full testing. If you think there should be an exception for your issue please reach out. Run previous tests Make sure that the changes that you've made don't break anything! Push all your work At this point the issue should be addressed, new testing should be in place, and all old tests should be passing. Create a Pull Request At this point, you should either have a forked repository with your issue fixes and it is time to put in a PR. Make sure that your PR has something like addresses #26 or closes #26 The most important thing is that it has the relevant issue number referenced in the body of the PR. Make noise! Get in our Riot and point to your new PR. Let us know you've tackled your first, third or 90th issue with us. We'll review it and everybody will get a warm feeling of accomplishment. rinse, repeat Find another issue, get more involved, make noise in our Riot, or find issues we may have missed. You've completed your first step to becoming a contributor. You're helping to Decentralize the FUTURE ! If you still have any further questions about contribution feel free to reach out to @eduadiez:matrix.org , @alexshelpin:matrix.org , @liondapp:matrix.org , or just make noise in the #DAppNode channel on Riot . How to Report Issues To report an issue, please use the GitHub issues tracker . When reporting issues, please mention the following details: Which version of DAppNode you are using How did you install it and where (physycal , server / VPS) Which platform are you using to connect to your ADMIN UI How to reproduce the issue What was the result of the issue What the expected behavior is Reducing the source code that caused the issue to a bare minimum is always very helpful and sometimes even clarifies a misunderstanding. Workflow for Pull Requests In order to contribute, please fork off of the develop branch and make your changes there. Your commit messages should detail why you made your change in addition to what you did (unless it is a tiny change). If you need to pull in any changes from develop after making your fork (for example, to resolve potential merge conflicts), please avoid using git merge and instead, git rebase your branch. Additionally, if you are writing a new feature, please ensure you write appropriate Boost test cases and place them under test/ . New features and bug fixes should be added to the Changelog.md file: please follow the style of previous entries, when applicable. Please note that this project is released with a Contributor Code of Conduct . By participating in this project you agree to abide by its terms. Thank you for your help!","title":"Contributing"},{"location":"contributing/#contributing","text":"Help is always appreciated! In particular, we need help in the following areas: Improving the documentation Fixing and responding to DAppNode's GitHub issues , especially those tagged as Good first issue which are meant as introductory issues for external contributors.","title":"Contributing"},{"location":"contributing/#how-to-contribute","text":"When bringing people on as contributors we prefer that they start with an issue tagged good first issue . After a contributor has shown they're a good fit and have completed 1 or 2 issues labeled good first issue with pull requests that have been accepted feel free of moving on to other issues. We're thrilled to see new contributors. In order to get the repositories setup before contributions refer to the README.md file. Find a suitable issue If this is your first-time look for an issue labeled good first issue otherwise look for issues labeled help wanted . If another issue jumps out at you please engage on the issue before starting it. Assign yourself the issue Let us know you're working on it! We hate wasted labor so it's always helpful to know what our community contributors are working on. Fork and clone DAppNode In general, it's a good practice to fork into your own repository. We prefer if issues are addressed in a branch with the issue number in its name. i.e. 29_this_is_an_issue Make contributions Make all the changes needed to address the given issue. Add testing In general, we aim for full test coverage. For this reason, most issues completed should include full testing. If you think there should be an exception for your issue please reach out. Run previous tests Make sure that the changes that you've made don't break anything! Push all your work At this point the issue should be addressed, new testing should be in place, and all old tests should be passing. Create a Pull Request At this point, you should either have a forked repository with your issue fixes and it is time to put in a PR. Make sure that your PR has something like addresses #26 or closes #26 The most important thing is that it has the relevant issue number referenced in the body of the PR. Make noise! Get in our Riot and point to your new PR. Let us know you've tackled your first, third or 90th issue with us. We'll review it and everybody will get a warm feeling of accomplishment. rinse, repeat Find another issue, get more involved, make noise in our Riot, or find issues we may have missed. You've completed your first step to becoming a contributor. You're helping to Decentralize the FUTURE ! If you still have any further questions about contribution feel free to reach out to @eduadiez:matrix.org , @alexshelpin:matrix.org , @liondapp:matrix.org , or just make noise in the #DAppNode channel on Riot .","title":"How to Contribute"},{"location":"contributing/#how-to-report-issues","text":"To report an issue, please use the GitHub issues tracker . When reporting issues, please mention the following details: Which version of DAppNode you are using How did you install it and where (physycal , server / VPS) Which platform are you using to connect to your ADMIN UI How to reproduce the issue What was the result of the issue What the expected behavior is Reducing the source code that caused the issue to a bare minimum is always very helpful and sometimes even clarifies a misunderstanding.","title":"How to Report Issues"},{"location":"contributing/#workflow-for-pull-requests","text":"In order to contribute, please fork off of the develop branch and make your changes there. Your commit messages should detail why you made your change in addition to what you did (unless it is a tiny change). If you need to pull in any changes from develop after making your fork (for example, to resolve potential merge conflicts), please avoid using git merge and instead, git rebase your branch. Additionally, if you are writing a new feature, please ensure you write appropriate Boost test cases and place them under test/ . New features and bug fixes should be added to the Changelog.md file: please follow the style of previous entries, when applicable. Please note that this project is released with a Contributor Code of Conduct . By participating in this project you agree to abide by its terms. Thank you for your help!","title":"Workflow for Pull Requests"},{"location":"faqs/","text":"FAQ\u00b4s What are the hardware minimum requirements for DAppNode to work? It depends on the use you want to do with it, basically the number of nodes / DApps that you want to host in it. A basic setup is at least 4 GB RAM (ideally 8GBs) and > 200 GB SSD disk, it is important that the disk is SSD, otherwise writing speed won't be able to cope with the ETH chain sync. On top of that requirements add capacity as needed to run the nodes you wish to run. Can I mine with my DAppNode server? Yes, you can! However, you may not be able to get any proof of work reward, as it is not very likely for any of the main cryptocurrencies. Still, DAppNode in a near future will be a great solution for hosting your proof of stake nodes and get some coins out of your stake easily and securely stored in your DAppNode or mine new cryptocurrencies that are CPU mineable and still have a relatively low difficulty. Can I run DAppNode in a laptop? DAppNode software is intended to be running 24/7 so a server config is more suitable for running a DAppNode and avoiding chains getting unsynced when the laptop is not online, but if you have a spare laptop with the minimum requirements you can install DAppNode in it. Please note that in the installation process the laptop will be formatted to install DAppNode so do not try to install DAppNode in your personal computer or your files might be compromised. Can I run DAppNode in a cloud service? Technically you can, and we recognize is the best way to try it and check how wonderful it is before buying a dedicated piece of hardware. However, that defeats the whole purpose of DAppNode mission about building a self-owned and censorship-resistant infrastructure layer\u2026 so please if you want to try it in a VPS please do, but then move it to your own piece of hardware (it will also be cheaper ) Why should I run a DAppNode? Centralization of blockchain networks and infrastructure is a huge problem for the whole blockchain vision, that can even make it dystopian. By running your own nodes you contribute to decentralization and censorship resistance of blockchain networks, with a higher degree of privacy while getting some incentives for sharing your infrastructure if you wish to. Why can't I connect via VPN to my DAppNode? If the device with which you are trying to connect to your DAppNode is in the same local network as the DAppNode, you should have a router that supports NAT Loopback or edit the VPN configuration and change the Server IP to the internal IP of your DAppNode. You can easily know if your router has NAT loopback enabled without accessing the router admin UI by opening your terminal and type ping + the IP of your DAppNode (where your VPN connection profile points to). If the ping works without getting stuck your router has NAT Loopback so if you can't connect to the VPN the cause is not being in the same network. Check that UDP is activated in your router to allow the opening of the needed ports for VPN access. More information about these issues in the \"VPN Connection issues\" section. Can I share my DAppNode? You can and you should! The devices tab of the DAppNode it is thought for you to add your beloved ones to access/use your DAppNode. You just generate his/her credentials from the ADMIN UI and they can connect via VPN to your DAppNode and use a trusted infrastructure as a gateway to the decentralized web. Can I use Metamask / MyCrypto connected to my own DAppNode node? Yep! You can customize the nodes your Metamask or MyCrypto connect to point to your very own node! To do so you just have to add the RPC URL http://fullnode.dappnode:8545 Can I install DAppNode in a Raspberry Pi with extra storage? Unfortunately not at the moment, DAppNode includes an Ethereum full node and an IPFS node by default so they need powerful hardware to be run on that a Raspberry Pi with extra storage cannot provide. If DAppNode is free how do you maintain operations/development? DAppNode software is an open-source platform developed by the non-profit association DAppNode association in Zug. DAppNode Association is driven and funded by the community, at the moment we have three grants from EF, Aragon, and ECF, but the association also has sustainability sources relying on projects that want their package uploaded to DAppNode and featured in the installer section, or the selling of hardware with DApp Node preinstalled which implies a donation to the association for every piece of hardware with DAppNode pre-installed sold, we are also backed by individual donors and supporters. Can I upload my own packages to DAppNode? Yes! We have developed an SDK to make the loading of packages to DAppNode easy for everyone. Check this doc! https://github.com/dappnode/DAppNodeSDK/wiki/DAppNode-SDK-tutorial Do I need technical knowledge to install/run a DAppNode? No! One of our the critical aspects to achieve our objectives is eliminating the technical friction to install and run nodes so a minimum knowledge is enough to run your own DAppNode. If you know how to open the terminal and run a couple of commands in the console terminal you are done! Can I use IPFS once DAppNode is installed? Yes! Take in account that IPFS is a core component of DAppNode itself, used for example to host the packages to be downloaded but you can also use it your own, as you have a totally functional IPFS node. You can access to it by typing http://ipfs.dappnode:5001/webui The first time you access to it will ask you for your \u201cCustom API address\u201d, just fill the field with this address and you will be connected to your IPFS node. This is the input you have to enter in the field \"Is your API in a port other than 5001? /ip4/172.33.1.5/tcp/5001 Is there any way to have a Web GUI for the Parity client? Since we updated from Parity 2.1.6 to newer versions, WEB GUI support has been deprecated by Parity, so at the moment the only way to interact with your node is through the command line. We are looking for solutions but it is not an easy issue.","title":"FAQs"},{"location":"faqs/#faq-s","text":"","title":"FAQ\u00b4s"},{"location":"faqs/#what-are-the-hardware-minimum-requirements-for-dappnode-to-work","text":"It depends on the use you want to do with it, basically the number of nodes / DApps that you want to host in it. A basic setup is at least 4 GB RAM (ideally 8GBs) and > 200 GB SSD disk, it is important that the disk is SSD, otherwise writing speed won't be able to cope with the ETH chain sync. On top of that requirements add capacity as needed to run the nodes you wish to run.","title":"What are the hardware minimum requirements for DAppNode to work?"},{"location":"faqs/#can-i-mine-with-my-dappnode-server","text":"Yes, you can! However, you may not be able to get any proof of work reward, as it is not very likely for any of the main cryptocurrencies. Still, DAppNode in a near future will be a great solution for hosting your proof of stake nodes and get some coins out of your stake easily and securely stored in your DAppNode or mine new cryptocurrencies that are CPU mineable and still have a relatively low difficulty.","title":"Can I mine with my DAppNode server?"},{"location":"faqs/#can-i-run-dappnode-in-a-laptop","text":"DAppNode software is intended to be running 24/7 so a server config is more suitable for running a DAppNode and avoiding chains getting unsynced when the laptop is not online, but if you have a spare laptop with the minimum requirements you can install DAppNode in it. Please note that in the installation process the laptop will be formatted to install DAppNode so do not try to install DAppNode in your personal computer or your files might be compromised.","title":"Can I run DAppNode in a laptop?"},{"location":"faqs/#can-i-run-dappnode-in-a-cloud-service","text":"Technically you can, and we recognize is the best way to try it and check how wonderful it is before buying a dedicated piece of hardware. However, that defeats the whole purpose of DAppNode mission about building a self-owned and censorship-resistant infrastructure layer\u2026 so please if you want to try it in a VPS please do, but then move it to your own piece of hardware (it will also be cheaper )","title":"Can I run DAppNode in a cloud service?"},{"location":"faqs/#why-should-i-run-a-dappnode","text":"Centralization of blockchain networks and infrastructure is a huge problem for the whole blockchain vision, that can even make it dystopian. By running your own nodes you contribute to decentralization and censorship resistance of blockchain networks, with a higher degree of privacy while getting some incentives for sharing your infrastructure if you wish to.","title":"Why should I run a DAppNode?"},{"location":"faqs/#why-cant-i-connect-via-vpn-to-my-dappnode","text":"If the device with which you are trying to connect to your DAppNode is in the same local network as the DAppNode, you should have a router that supports NAT Loopback or edit the VPN configuration and change the Server IP to the internal IP of your DAppNode. You can easily know if your router has NAT loopback enabled without accessing the router admin UI by opening your terminal and type ping + the IP of your DAppNode (where your VPN connection profile points to). If the ping works without getting stuck your router has NAT Loopback so if you can't connect to the VPN the cause is not being in the same network. Check that UDP is activated in your router to allow the opening of the needed ports for VPN access. More information about these issues in the \"VPN Connection issues\" section.","title":"Why can't I connect via VPN to my DAppNode?"},{"location":"faqs/#can-i-share-my-dappnode","text":"You can and you should! The devices tab of the DAppNode it is thought for you to add your beloved ones to access/use your DAppNode. You just generate his/her credentials from the ADMIN UI and they can connect via VPN to your DAppNode and use a trusted infrastructure as a gateway to the decentralized web.","title":"Can I share my DAppNode?"},{"location":"faqs/#can-i-use-metamask-mycrypto-connected-to-my-own-dappnode-node","text":"Yep! You can customize the nodes your Metamask or MyCrypto connect to point to your very own node! To do so you just have to add the RPC URL http://fullnode.dappnode:8545","title":"Can I use Metamask / MyCrypto connected to my own DAppNode node?"},{"location":"faqs/#can-i-install-dappnode-in-a-raspberry-pi-with-extra-storage","text":"Unfortunately not at the moment, DAppNode includes an Ethereum full node and an IPFS node by default so they need powerful hardware to be run on that a Raspberry Pi with extra storage cannot provide.","title":"Can I install DAppNode in a Raspberry Pi with extra storage?"},{"location":"faqs/#if-dappnode-is-free-how-do-you-maintain-operationsdevelopment","text":"DAppNode software is an open-source platform developed by the non-profit association DAppNode association in Zug. DAppNode Association is driven and funded by the community, at the moment we have three grants from EF, Aragon, and ECF, but the association also has sustainability sources relying on projects that want their package uploaded to DAppNode and featured in the installer section, or the selling of hardware with DApp Node preinstalled which implies a donation to the association for every piece of hardware with DAppNode pre-installed sold, we are also backed by individual donors and supporters.","title":"If DAppNode is free how do you maintain operations/development?"},{"location":"faqs/#can-i-upload-my-own-packages-to-dappnode","text":"Yes! We have developed an SDK to make the loading of packages to DAppNode easy for everyone. Check this doc! https://github.com/dappnode/DAppNodeSDK/wiki/DAppNode-SDK-tutorial","title":"Can I upload my own packages to DAppNode?"},{"location":"faqs/#do-i-need-technical-knowledge-to-installrun-a-dappnode","text":"No! One of our the critical aspects to achieve our objectives is eliminating the technical friction to install and run nodes so a minimum knowledge is enough to run your own DAppNode. If you know how to open the terminal and run a couple of commands in the console terminal you are done!","title":"Do I need technical knowledge to install/run a DAppNode?"},{"location":"faqs/#can-i-use-ipfs-once-dappnode-is-installed","text":"Yes! Take in account that IPFS is a core component of DAppNode itself, used for example to host the packages to be downloaded but you can also use it your own, as you have a totally functional IPFS node. You can access to it by typing http://ipfs.dappnode:5001/webui The first time you access to it will ask you for your \u201cCustom API address\u201d, just fill the field with this address and you will be connected to your IPFS node. This is the input you have to enter in the field \"Is your API in a port other than 5001? /ip4/172.33.1.5/tcp/5001","title":"Can I use IPFS once DAppNode is installed?"},{"location":"faqs/#is-there-any-way-to-have-a-web-gui-for-the-parity-client","text":"Since we updated from Parity 2.1.6 to newer versions, WEB GUI support has been deprecated by Parity, so at the moment the only way to interact with your node is through the command line. We are looking for solutions but it is not an easy issue.","title":"Is there any way to have a Web GUI for the Parity client?"},{"location":"install/","text":"Install DAppNode DAppNode is an Operating System. Our team has taken Debian and super-powered it to be your gateway to access the decentralized web. While you can run DAppNode on a Virtual Private Server (VPS), we highly encourage you to run DAppNode on your own physical server . The intention of DAppNode is to create a strong network of decentralized servers. Running DAppNode on (politically) centralized virtual servers defeats the purpose \ud83d\ude09. That being said, we realize it may be easiest to get started and test the system on a VPS. Warning Do not install DAppNode on your laptop. The ISO installation will erase all its content. DAppNode is intended to be installed on a dedicated machine. Minimum requirements You will need a dedicated machine to install it. We recommend having at least 4GB RAM (ideally 8GB+) and an SSD hard drive with at least 256GB (add capacity as you like, keep in mind that only Ethereum mainnet is 180GB at press time). In the client side you just need an OpenVPN client installed in the device with which you want to connect to your DAppNode. See info on recommended clients and installation here How to install DAppNode on your machine Okay, so you\u2019re ready to be a Nodler. Let us show you how to make that hardware sing the hardware decentralization song! You can choose between two methods to install DAppNode: Install DAppNode from an ISO - When you want to perform a clean installation, installing the base operating system and DAppNode. Installing from an ISO will wipe the machine data and install Debian + DAppNode Installation using the installer script - When you already have a machine with Debian installed and you just want to install DAppNode on it. How to install DAppNode from an ISO Download the image from DAppNodeISO or build it from source Burn the ISO in a USB (~8 min) Burn the ISO to an USB stick. To do so we recommend using Etcher for the OS with which you will prepare the USB to boot from your server and install DAppNode Info Please note that Etcher is intended to generate the ISO image in a bootable USB from your desktop device, and then install it in a server IF YOU EXECUTE THE BOOTABLE USB IN A MACHINE CONTAINING DATA IT WILL BE ERASED. Also, DAppNode is intended to run 24/7 so if you install it in a laptop or desktop machine and you turn it off it will lose the sync Install the DAppNode ISO (~15 min) Insert the USB into your Server and prepare to install a Debian distribution. You will have to make sure that your Server boots from the USB. If you succeed at booting up from your USB, you will be greeted with this screen or a similar one: Follow the installation steps. Various screens will guide you through the process and you can follow the recommended setup below for a default installation: Recommended setup *Note by following these instructions you will erase ALL your server's disk contents. Select a language - Language: [English] Select your location - Country, territory or area: [United States or your own] Configure the keyboard - Keymap to use? [American English or your own] Configure the network - Hostname: [dappnode] Set up users and passwords - Root password: [Leave blank (twice)] Set up users and passwords - Username for your account: [dappnode] Set up users and passwords Choose a password for the new user: [YOUR_PASSWORD] Set up users and passwords - Re-enter password to verify: [YOUR_PASSWORD] Configure the clock - Select your time zone: [Select your own] Partition disk - Partitioning method: [Guided - use entire disk and set up LVM] Partition disk - Select disk to partition: [SCSIX (0,0,0) (sda) - ...] Partition disk - Selected for partitioning: [All files in one partition] Partition disk - Write the changes to disks and configure LVM? [Yes] Partition disk - Amount of volume group to use for guided partitioning: [Continue] Partition disk - Write the changes to disks? [Yes] Install the GRUB boot loader on a hard disk - Install the GRUB boot loader to the master boot record? [Yes] Install the GRUB boot loader on a hard disk - [/dev/sda (or the disk selected above)] Your public IP - [Unless you have a fixed IP leave it blank] Finish the installation - Installation complete [continue] Resume DAppNode's installation If the installation succeeded, your system will reboot and you will have to log in with the user and password provided in the installation steps above. Then the following screen should appear: Now you can connect to your DAppNode by downloading the .ovpn file that you will be able to download from the link / QR show at the end of the installation by double click in it to open it with a compatible OpenVPN client. Here you have the recommended ones and connection instructions Info Note that for the ovpn to be correctly downloaded from the link given you will need to have the TCP port 8090 opened and that the default port to connect via OpenVPN is 1194 UDP. UPnP should have opened them for you if your router has UPnP enabled, if not you will have to open and forward them manually Even if the OpenVPN files are served via HTTP, they are served encrypted, and then decrypted locally in your browser with the key provided in the link, so anyone snooping the file transfer cannot use it. Installation via installer script Info This software is not meant to be run in a remote machine hosted by a remote provider. What DAppNode specifically wants to avoid is centralization of the machines that our digital lives rely on. That said, we understand that before buying a dedicated machine to run your DAppNode you might want to test it and see how easy it is to use. Remember Your hardware, your coins, your privacy, your freedom. We strongly recommend using 8GB+ of RAM and a 200GB+ SSD hard drive. Install DAppNode prerequisites docker docker-compose xz (usually it comes pre-installed by default) To install all the above prerequisites, execute the command below in the terminal of the machine you want to install DAppNode. If you already have the dependencies installed or you want to install them on your own you can skip this step. sudo wget - O - https : // prerequisites . dappnode . io | sudo bash Install DAppNode Run the following command to install DAppNode: sudo wget - O - https : // installer . dappnode . io | sudo bash If you have a static IP and want to set it up right from the connection, run the command below, which includes a variable for your static IP. The majority of users will not need to add that as dynamic IPs are the most common. sudo wget - O - https : // installer . dappnode . io | sudo STATIC_IP = \"your static IP\" bash When the installation is done and is successful, be it you can connect to your DAppNode by downloading the .ovpn file that you will be able to download from the link / QR show at the end of the installation, just double click in it to open it with a compatible OpenVPN client. Here you have the recommended ones and connection instructions Info Note that for the ovpn to be correctly downloaded from the link given you will need to have the TCP port 8090 opened and that the default port to connect via OpenVPN is 1194 UDP. UPnP should have opened them for you if your router has UPnP enabled, if not you will have to open them manually Please, after installation be aware that the ethereum blockchain will take some time to synchronize and you will not be able to perform most actions before that. How to restore an installed DAppNode to the latest version: If you are experiencing any problem or just want to make sure you are running the latest DAppNode versions, execute this command in the DAppNode terminal. This will update the core packages to the latest versions without erasing any data from your volumes. sudo wget - O - https : // installer . dappnode . io | sudo UPDATE = true bash How to uninstall DAppNode This command will uninstall DAppNode components (but not docker et al.): \u26a0\ufe0f BEWARE! It will also delete all volumes and stored data!\u26a0\ufe0f wget - qO - https : // uninstaller . dappnode . io | sudo bash Enter your DAppNode! Connect to your DAppNode through VPN and navigate to my.dappnode to access DAppNode's admin page. DAppNode's functionality will be limited until the Ethereum mainnet chain is synced. 2.3. Now you can do things like for example: Navigate to a decentralized web decentral.eth : Decentralized version of Mycrypto Decentralized version of ENS Manager Decentralized version of Wallet Gnosis Go to the IPFS web interface by entering http://ipfs.dappnode:5001/webui into your browser. The first time you access to it will ask you for your Custom API address , just fill the field with this address and you will be connected to your IPFS node, this is the input you have to enter in the field Is your API in a port other than 5001? / dns4 / ipfs . dappnode / tcp / 5001 / http You can have a look to our user guide https://docs.dappnode.io Even if it's just a message to confirm that everything is running successfully, we need your feedback to provide the best decentralized server network infrastructure possible. Please message us with questions, suggestions, or just to confirm you got your DAppNode set up: Message us in our Riot channel Make a tweet mentioning @dappnode !","title":"Install"},{"location":"install/#install-dappnode","text":"DAppNode is an Operating System. Our team has taken Debian and super-powered it to be your gateway to access the decentralized web. While you can run DAppNode on a Virtual Private Server (VPS), we highly encourage you to run DAppNode on your own physical server . The intention of DAppNode is to create a strong network of decentralized servers. Running DAppNode on (politically) centralized virtual servers defeats the purpose \ud83d\ude09. That being said, we realize it may be easiest to get started and test the system on a VPS. Warning Do not install DAppNode on your laptop. The ISO installation will erase all its content. DAppNode is intended to be installed on a dedicated machine.","title":"Install DAppNode"},{"location":"install/#minimum-requirements","text":"You will need a dedicated machine to install it. We recommend having at least 4GB RAM (ideally 8GB+) and an SSD hard drive with at least 256GB (add capacity as you like, keep in mind that only Ethereum mainnet is 180GB at press time). In the client side you just need an OpenVPN client installed in the device with which you want to connect to your DAppNode. See info on recommended clients and installation here","title":"Minimum requirements"},{"location":"install/#how-to-install-dappnode-on-your-machine","text":"Okay, so you\u2019re ready to be a Nodler. Let us show you how to make that hardware sing the hardware decentralization song! You can choose between two methods to install DAppNode: Install DAppNode from an ISO - When you want to perform a clean installation, installing the base operating system and DAppNode. Installing from an ISO will wipe the machine data and install Debian + DAppNode Installation using the installer script - When you already have a machine with Debian installed and you just want to install DAppNode on it.","title":"How to install DAppNode on your machine"},{"location":"install/#how-to-install-dappnode-from-an-iso","text":"Download the image from DAppNodeISO or build it from source","title":"How to install DAppNode from an ISO"},{"location":"install/#burn-the-iso-in-a-usb-8-min","text":"Burn the ISO to an USB stick. To do so we recommend using Etcher for the OS with which you will prepare the USB to boot from your server and install DAppNode Info Please note that Etcher is intended to generate the ISO image in a bootable USB from your desktop device, and then install it in a server IF YOU EXECUTE THE BOOTABLE USB IN A MACHINE CONTAINING DATA IT WILL BE ERASED. Also, DAppNode is intended to run 24/7 so if you install it in a laptop or desktop machine and you turn it off it will lose the sync","title":"Burn the ISO in a USB (~8 min)"},{"location":"install/#install-the-dappnode-iso-15-min","text":"Insert the USB into your Server and prepare to install a Debian distribution. You will have to make sure that your Server boots from the USB. If you succeed at booting up from your USB, you will be greeted with this screen or a similar one: Follow the installation steps. Various screens will guide you through the process and you can follow the recommended setup below for a default installation:","title":"Install the DAppNode ISO (~15 min)"},{"location":"install/#recommended-setup","text":"*Note by following these instructions you will erase ALL your server's disk contents. Select a language - Language: [English] Select your location - Country, territory or area: [United States or your own] Configure the keyboard - Keymap to use? [American English or your own] Configure the network - Hostname: [dappnode] Set up users and passwords - Root password: [Leave blank (twice)] Set up users and passwords - Username for your account: [dappnode] Set up users and passwords Choose a password for the new user: [YOUR_PASSWORD] Set up users and passwords - Re-enter password to verify: [YOUR_PASSWORD] Configure the clock - Select your time zone: [Select your own] Partition disk - Partitioning method: [Guided - use entire disk and set up LVM] Partition disk - Select disk to partition: [SCSIX (0,0,0) (sda) - ...] Partition disk - Selected for partitioning: [All files in one partition] Partition disk - Write the changes to disks and configure LVM? [Yes] Partition disk - Amount of volume group to use for guided partitioning: [Continue] Partition disk - Write the changes to disks? [Yes] Install the GRUB boot loader on a hard disk - Install the GRUB boot loader to the master boot record? [Yes] Install the GRUB boot loader on a hard disk - [/dev/sda (or the disk selected above)] Your public IP - [Unless you have a fixed IP leave it blank] Finish the installation - Installation complete [continue] Resume DAppNode's installation If the installation succeeded, your system will reboot and you will have to log in with the user and password provided in the installation steps above. Then the following screen should appear: Now you can connect to your DAppNode by downloading the .ovpn file that you will be able to download from the link / QR show at the end of the installation by double click in it to open it with a compatible OpenVPN client. Here you have the recommended ones and connection instructions Info Note that for the ovpn to be correctly downloaded from the link given you will need to have the TCP port 8090 opened and that the default port to connect via OpenVPN is 1194 UDP. UPnP should have opened them for you if your router has UPnP enabled, if not you will have to open and forward them manually Even if the OpenVPN files are served via HTTP, they are served encrypted, and then decrypted locally in your browser with the key provided in the link, so anyone snooping the file transfer cannot use it.","title":"Recommended setup"},{"location":"install/#installation-via-installer-script","text":"Info This software is not meant to be run in a remote machine hosted by a remote provider. What DAppNode specifically wants to avoid is centralization of the machines that our digital lives rely on. That said, we understand that before buying a dedicated machine to run your DAppNode you might want to test it and see how easy it is to use. Remember Your hardware, your coins, your privacy, your freedom. We strongly recommend using 8GB+ of RAM and a 200GB+ SSD hard drive.","title":"Installation via installer script"},{"location":"install/#install-dappnode-prerequisites","text":"docker docker-compose xz (usually it comes pre-installed by default) To install all the above prerequisites, execute the command below in the terminal of the machine you want to install DAppNode. If you already have the dependencies installed or you want to install them on your own you can skip this step. sudo wget - O - https : // prerequisites . dappnode . io | sudo bash","title":"Install DAppNode prerequisites"},{"location":"install/#install-dappnode_1","text":"Run the following command to install DAppNode: sudo wget - O - https : // installer . dappnode . io | sudo bash If you have a static IP and want to set it up right from the connection, run the command below, which includes a variable for your static IP. The majority of users will not need to add that as dynamic IPs are the most common. sudo wget - O - https : // installer . dappnode . io | sudo STATIC_IP = \"your static IP\" bash When the installation is done and is successful, be it you can connect to your DAppNode by downloading the .ovpn file that you will be able to download from the link / QR show at the end of the installation, just double click in it to open it with a compatible OpenVPN client. Here you have the recommended ones and connection instructions Info Note that for the ovpn to be correctly downloaded from the link given you will need to have the TCP port 8090 opened and that the default port to connect via OpenVPN is 1194 UDP. UPnP should have opened them for you if your router has UPnP enabled, if not you will have to open them manually Please, after installation be aware that the ethereum blockchain will take some time to synchronize and you will not be able to perform most actions before that.","title":"Install DAppNode"},{"location":"install/#how-to-restore-an-installed-dappnode-to-the-latest-version","text":"If you are experiencing any problem or just want to make sure you are running the latest DAppNode versions, execute this command in the DAppNode terminal. This will update the core packages to the latest versions without erasing any data from your volumes. sudo wget - O - https : // installer . dappnode . io | sudo UPDATE = true bash","title":"How to restore an installed DAppNode to the latest version:"},{"location":"install/#how-to-uninstall-dappnode","text":"This command will uninstall DAppNode components (but not docker et al.): \u26a0\ufe0f BEWARE! It will also delete all volumes and stored data!\u26a0\ufe0f wget - qO - https : // uninstaller . dappnode . io | sudo bash","title":"How to uninstall DAppNode"},{"location":"install/#enter-your-dappnode","text":"Connect to your DAppNode through VPN and navigate to my.dappnode to access DAppNode's admin page. DAppNode's functionality will be limited until the Ethereum mainnet chain is synced.","title":"Enter your DAppNode!"},{"location":"install/#23-now-you-can-do-things-like-for-example","text":"Navigate to a decentralized web decentral.eth : Decentralized version of Mycrypto Decentralized version of ENS Manager Decentralized version of Wallet Gnosis Go to the IPFS web interface by entering http://ipfs.dappnode:5001/webui into your browser. The first time you access to it will ask you for your Custom API address , just fill the field with this address and you will be connected to your IPFS node, this is the input you have to enter in the field Is your API in a port other than 5001? / dns4 / ipfs . dappnode / tcp / 5001 / http","title":"2.3. Now you can do things like for example:"},{"location":"install/#you-can-have-a-look-to-our-user-guide-httpsdocsdappnodeio","text":"Even if it's just a message to confirm that everything is running successfully, we need your feedback to provide the best decentralized server network infrastructure possible. Please message us with questions, suggestions, or just to confirm you got your DAppNode set up: Message us in our Riot channel Make a tweet mentioning @dappnode !","title":"You can have a look to our user guide https://docs.dappnode.io"},{"location":"introduction/","text":"Introduction Welcome to DAppNode!! If you are reading this, decentralization, privacy and security are important to you. And we get you. That's why we are here to help you run your own secure hardware which contributes to a truly decentralized web. DAppNode is an operating system that allows you to host decentralized apps in a truly decentralized way and eliminates the reliance on third parties vulnerable to centralization. It also adds an extra layer of incentivization that helps spread adoption of the blockchain ecosystem and solves the problem of infrastructure centralization. The problem Most nodes for public blockchains nowadays have a degree of architectural or/and political centralization. The first refers to the number of machines a system is made of, and the second concerns the ownership of such machines, Vitalik Buterin, 2017 . A first very common case is to host a node in a Virtual Private Server (VPS). This puts your node in the hands of a highly centralized company like Digital Ocean or Amazon, which could block and censor your access. Moreover, they could be hosting different nodes in the same machine, architecturally reducing decentralization too. Another common case in the Ethereum blockchain is to connect through a node owned by Infura. While Infura's work on providing infrastructure for the network is comiable and a necessity at this stage, we can see how the ownership of a majority of nodes by the same company is a centralizing factor. We, DAppNode, have set up to empower everyone, regardless of their technical ability, to be able to break free of any centralization and possibility of access censorship by running their own node and host their favourite DApps. DAppNode connects users to the decentralized web and creates the infrastructure for DApps to run services 24x7 in a truly decentralized manner. You can start using DAppNode in two ways: Either you can install DAppNode on any piece of hardware (see minimum requirements), or You can acquire one of our pre-installed DAppNode servers for the easiest and most convenient way of to get easy censorship-resistant access to your favorite DApps. With both you will have the ability to host your own nodes and also share its access with family and friends. For developers, we also developed an SDK for DAppNodePackage (DNP) developers and we expect to see many DApps with their own DNP that improve the user experience and decentralizes access. For example, there could be a DApp accelerator that allows the devices not having to synchronize the chain to start using it, like a cache system for the DAppNode users. Other use cases could be a prepared service for staking in any chain, a client for other chains, a scrawl of a decentralized search engine, etc. Within the DAppNode project, we have a storefront that will allow any person to install and configure their own project in just minutes, facilitating the visibility and decentralization of its growth and expansion. We believe this is the beginning of a new model, a P2P economy that makes projects truly decentralized and accessible to anyone. We envision a self-sustaining system where users support their favorite projects, by providing the service that the project needs and in return it provides the necessary income to amortize the costs of the DAppNode. The Desired Final User Story Vojtech has several cryptocurrencies he follows and is ready to stop using his laptop to run clients. He also doesn\u2019t want to have to pay a monthly subscription in fiat to some company he doesn\u2019t trust with his private keys. He hears about DAppNode and decides to buy the top of the line DAppNode server pre-loaded from one of the many certified independent vendors (though he could buy his own server and install the software himself). The DAppNode server is delivered to his front door, and when Vojtech opens the box he finds a 2 step instruction card: First, plug in the server. Second, go to dappnode.org/initialize On this website, there is an extremely simple and short walk-through for Vojtech to set up his credentials and choose which clients to deploy. By just checking a few boxes, Vojtech deployed his own VPN; his own local instance of MyCrypto.com; Ethereum, Bitcoin, Monero and Dogecoin Full nodes; a ZenCash Secure Node and DASH Master Node; he joined the IPFS Consortium and deployed a TrueBit Verifier and Livepeer node; and hosted Giveth, Swarm City, Aragon, Colony, and Decentraland Helper DApps to support these projects and to ensure that his interaction with these DApps cannot be censored and is fully trustless. Vojtech then tells his friends and family that he is the admin for his own DAppNode and he is able to give them a link that sets them up with their own credentials and access to his DAppNode. Vojtech can deploy any other DApps that he or his friends and family want to have hosted with a couple clicks. He has become the trusted gateway to the decentralized world for his entire community. Vojtech ends up being able to pay off the cost of his DAppNode in 2 months with the profits made from his ZenCash, Swarm City, DASH and TrueBit Nodes. He also canceled his VPN and all of his Digital Ocean accounts because now he has his own server that he can host all of his services on. Without even trying, Vojtech has a couple extra hundred dollars a month because he is running DAppNode on his own personal server. We started working on this project mostly part-time in October 2017; now we have a team of 6 working full time. We have a fully functional MVP version that we have been sharing with the community. We have partnered with hardware manufacturers and we are very close to being ready for shipping DAppNode servers worldwide! We have been developing in an invitingly open source manner and now that the software is completed anyone can use their own hardware to run DAppNode on it. This project is a community funded and fully open source project that has received support from Ethereum Foundation, Ethereum Community Fund, Eth Prize, Aragon NEST, GitCoin and private donors. We are open to receive donations from any interested parties to help pay the developers working hard on software development. See our campaign on Giveth.io to make a donation: Ready to jump in? Here we go! Benefits of DAppNode Easy set up Trustless system Invitingly Open Source Free up space on your Devices Great for proof of stake mining You can browse .eth domains like the normal web You take control of your Nodes Encourages people to have their own server Perfect for projects that reward you for hosting, (Filecoin, Mysterium, etc) Can facilitate a P2P economy Host any P2P networking protocols DApp teams can develop packages their users can run 24x7 Never trust a hosting provider with your private keys again! One click node deployment (Full Nodes, DApps) Censorship resistance (run your own VPN) 1 DAppNode can support an entire Community DAppNode will build communities and decrease centralization DAppNode is the most important piece of infrastructure for our decencentralized future Considering all of the incentive structures to to run nodes, most DAppNode Admins will be make a profit maintaining their own DAppNode Team members Adviser & Instigator: Jordi Baylina Adviser: Griff Green Project Lead: Eduardo Antu\u00f1a Front-End Lead: DAppLion DevOps: Vdo Ecosystem development: Pol Lanski Ecosystem development: \u00c1lex Casas Where the #nodlers play DAppNode Riot Github","title":"Introduction"},{"location":"introduction/#introduction","text":"Welcome to DAppNode!! If you are reading this, decentralization, privacy and security are important to you. And we get you. That's why we are here to help you run your own secure hardware which contributes to a truly decentralized web. DAppNode is an operating system that allows you to host decentralized apps in a truly decentralized way and eliminates the reliance on third parties vulnerable to centralization. It also adds an extra layer of incentivization that helps spread adoption of the blockchain ecosystem and solves the problem of infrastructure centralization.","title":"Introduction"},{"location":"introduction/#the-problem","text":"Most nodes for public blockchains nowadays have a degree of architectural or/and political centralization. The first refers to the number of machines a system is made of, and the second concerns the ownership of such machines, Vitalik Buterin, 2017 . A first very common case is to host a node in a Virtual Private Server (VPS). This puts your node in the hands of a highly centralized company like Digital Ocean or Amazon, which could block and censor your access. Moreover, they could be hosting different nodes in the same machine, architecturally reducing decentralization too. Another common case in the Ethereum blockchain is to connect through a node owned by Infura. While Infura's work on providing infrastructure for the network is comiable and a necessity at this stage, we can see how the ownership of a majority of nodes by the same company is a centralizing factor. We, DAppNode, have set up to empower everyone, regardless of their technical ability, to be able to break free of any centralization and possibility of access censorship by running their own node and host their favourite DApps. DAppNode connects users to the decentralized web and creates the infrastructure for DApps to run services 24x7 in a truly decentralized manner. You can start using DAppNode in two ways: Either you can install DAppNode on any piece of hardware (see minimum requirements), or You can acquire one of our pre-installed DAppNode servers for the easiest and most convenient way of to get easy censorship-resistant access to your favorite DApps. With both you will have the ability to host your own nodes and also share its access with family and friends. For developers, we also developed an SDK for DAppNodePackage (DNP) developers and we expect to see many DApps with their own DNP that improve the user experience and decentralizes access. For example, there could be a DApp accelerator that allows the devices not having to synchronize the chain to start using it, like a cache system for the DAppNode users. Other use cases could be a prepared service for staking in any chain, a client for other chains, a scrawl of a decentralized search engine, etc. Within the DAppNode project, we have a storefront that will allow any person to install and configure their own project in just minutes, facilitating the visibility and decentralization of its growth and expansion. We believe this is the beginning of a new model, a P2P economy that makes projects truly decentralized and accessible to anyone. We envision a self-sustaining system where users support their favorite projects, by providing the service that the project needs and in return it provides the necessary income to amortize the costs of the DAppNode.","title":"The problem"},{"location":"introduction/#the-desired-final-user-story","text":"Vojtech has several cryptocurrencies he follows and is ready to stop using his laptop to run clients. He also doesn\u2019t want to have to pay a monthly subscription in fiat to some company he doesn\u2019t trust with his private keys. He hears about DAppNode and decides to buy the top of the line DAppNode server pre-loaded from one of the many certified independent vendors (though he could buy his own server and install the software himself). The DAppNode server is delivered to his front door, and when Vojtech opens the box he finds a 2 step instruction card: First, plug in the server. Second, go to dappnode.org/initialize On this website, there is an extremely simple and short walk-through for Vojtech to set up his credentials and choose which clients to deploy. By just checking a few boxes, Vojtech deployed his own VPN; his own local instance of MyCrypto.com; Ethereum, Bitcoin, Monero and Dogecoin Full nodes; a ZenCash Secure Node and DASH Master Node; he joined the IPFS Consortium and deployed a TrueBit Verifier and Livepeer node; and hosted Giveth, Swarm City, Aragon, Colony, and Decentraland Helper DApps to support these projects and to ensure that his interaction with these DApps cannot be censored and is fully trustless. Vojtech then tells his friends and family that he is the admin for his own DAppNode and he is able to give them a link that sets them up with their own credentials and access to his DAppNode. Vojtech can deploy any other DApps that he or his friends and family want to have hosted with a couple clicks. He has become the trusted gateway to the decentralized world for his entire community. Vojtech ends up being able to pay off the cost of his DAppNode in 2 months with the profits made from his ZenCash, Swarm City, DASH and TrueBit Nodes. He also canceled his VPN and all of his Digital Ocean accounts because now he has his own server that he can host all of his services on. Without even trying, Vojtech has a couple extra hundred dollars a month because he is running DAppNode on his own personal server. We started working on this project mostly part-time in October 2017; now we have a team of 6 working full time. We have a fully functional MVP version that we have been sharing with the community. We have partnered with hardware manufacturers and we are very close to being ready for shipping DAppNode servers worldwide! We have been developing in an invitingly open source manner and now that the software is completed anyone can use their own hardware to run DAppNode on it. This project is a community funded and fully open source project that has received support from Ethereum Foundation, Ethereum Community Fund, Eth Prize, Aragon NEST, GitCoin and private donors. We are open to receive donations from any interested parties to help pay the developers working hard on software development. See our campaign on Giveth.io to make a donation: Ready to jump in? Here we go!","title":"The Desired Final User Story"},{"location":"introduction/#benefits-of-dappnode","text":"Easy set up Trustless system Invitingly Open Source Free up space on your Devices Great for proof of stake mining You can browse .eth domains like the normal web You take control of your Nodes Encourages people to have their own server Perfect for projects that reward you for hosting, (Filecoin, Mysterium, etc) Can facilitate a P2P economy Host any P2P networking protocols DApp teams can develop packages their users can run 24x7 Never trust a hosting provider with your private keys again! One click node deployment (Full Nodes, DApps) Censorship resistance (run your own VPN) 1 DAppNode can support an entire Community DAppNode will build communities and decrease centralization DAppNode is the most important piece of infrastructure for our decencentralized future Considering all of the incentive structures to to run nodes, most DAppNode Admins will be make a profit maintaining their own DAppNode","title":"Benefits of DAppNode"},{"location":"introduction/#team-members","text":"Adviser & Instigator: Jordi Baylina Adviser: Griff Green Project Lead: Eduardo Antu\u00f1a Front-End Lead: DAppLion DevOps: Vdo Ecosystem development: Pol Lanski Ecosystem development: \u00c1lex Casas","title":"Team members"},{"location":"introduction/#where-the-nodlers-play","text":"DAppNode Riot Github","title":"Where the #nodlers play"},{"location":"license/","text":"dappnode/DAppNode is licensed under the GNU General Public License v3.0 Permissions of this strong copyleft license are conditioned on making available complete source code of licensed works and modifications, which include larger works using a licensed work, under the same license. Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. Permissions Commercial use Modification Distribution Patent use Private use Limitations Liability Warranty Conditions License and copyright notice State changes Disclose source Same license This is not legal advice. Learn more about repository licenses. 8570176 on 30 May 2018 @eduadiez eduadiez Added CONTRIBUTING.md and modified the LICENSE 674 lines (553 sloc) 34.3 KB GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a ) The work must carry prominent notices stating that you modified it , and giving a relevant date . b ) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7 . This requirement modifies the requirement in section 4 to \" keep intact all notices \" . c ) You must license the entire work , as a whole , under this License to anyone who comes into possession of a copy . This License will therefore apply , along with any applicable section 7 additional terms , to the whole of the work , and all its parts , regardless of how they are packaged . This License gives no permission to license the work in any other way , but it does not invalidate such permission if you have separately received it . d ) If the work has interactive user interfaces , each must display Appropriate Legal Notices ; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices , your work need not make them do so . A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a ) Convey the object code in , or embodied in , a physical product ( including a physical distribution medium ) , accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange . b ) Convey the object code in , or embodied in , a physical product ( including a physical distribution medium ) , accompanied by a written offer , valid for at least three years and valid for as long as you offer spare parts or customer support for that product model , to give anyone who possesses the object code either ( 1 ) a copy of the Corresponding Source for all the software in the product that is covered by this License , on a durable physical medium customarily used for software interchange , for a price no more than your reasonable cost of physically performing this conveying of source , or ( 2 ) access to copy the Corresponding Source from a network server at no charge . c ) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source . This alternative is allowed only occasionally and noncommercially , and only if you received the object code with such an offer , in accord with subsection 6 b . d ) Convey the object code by offering access from a designated place ( gratis or for a charge ) , and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge . You need not require recipients to copy the Corresponding Source along with the object code . If the place to copy the object code is a network server , the Corresponding Source may be on a different server ( operated by you or a third party ) that supports equivalent copying facilities , provided you maintain clear directions next to the object code saying where to find the Corresponding Source . Regardless of what server hosts the Corresponding Source , you remain obligated to ensure that it is available for as long as needed to satisfy these requirements . e ) Convey the object code using peer - to - peer transmission , provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6 d . A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. Additional Terms. \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a ) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License ; or b ) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it ; or c ) Prohibiting misrepresentation of the origin of that material , or requiring that modified versions of such material be marked in reasonable ways as different from the original version ; or d ) Limiting the use for publicity purposes of names of licensors or authors of the material ; or e ) Declining to grant rights under trademark law for use of some trade names , trademarks , or service marks ; or f ) Requiring indemnification of licensors and authors of that material by anyone who conveys the material ( or modified versions of it ) with contractual assumptions of liability to the recipient , for any liability that these contractual assumptions directly impose on those licensors and authors . All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. < one line to give the program ' s name and a brief idea of what it does.> Copyright ( C ) < year > < name of author > This program is free software : you can redistribute it and / or modify it under the terms of the GNU General Public License as published by the Free Software Foundation , either version 3 of the License , or ( at your option ) any later version . This program is distributed in the hope that it will be useful , but WITHOUT ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU General Public License for more details . You should have received a copy of the GNU General Public License along with this program . If not , see < http : // www . gnu . org / licenses /> . Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: < program > Copyright ( C ) < year > < name of author > This program comes with ABSOLUTELY NO WARRANTY ; for details type `show w'. This is free software , and you are welcome to redistribute it under certain conditions ; type `show c' for details. The hypothetical commands show w' and show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\". You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see http://www.gnu.org/licenses/ . The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read http://www.gnu.org/philosophy/why-not-lgpl.html . \u00a9 2019 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing API Training Blog About Press h to open a hovercard with more details.","title":"License"},{"location":"manifest-reference/","text":"DAppNode Package (DNP) manifest The DAppNode Package manifest defines all the necessary information for a DAppNode to understand this package: IPFS of BZZ hashes to download its docker image Docker related data to configure and run its container Metadata to control how the package is shown in the admin UI. Example { \"name\" : \"ipfs.dnp.dappnode.eth\" , \"version\" : \"0.2.0\" , \"upstreamVersion\" : \"2.6.0\" , \"shortDescription\" : \"Distributed file system for storing and accessing data.\" , \"description\" : \"Welcome! IPFS is a distributed system for storing and accessing files, websites, applications, and data. If you\u2019re new to IPFS, check our [introductory page](https://ipfs.io/#why) for an easy overview. \\n\\nWith this node you can upload and download files from IPFS using it own fancy web console at [http://ipfs.dappnode:5001/webui](http://ipfs.dappnode:5001/webui). Other DAppNode Packages and external applications can use its API at the endpoint `http://ipfs.dappnode:5001/api`. Go to the [IPFS HTTP API full reference](https://docs.ipfs.io/reference/api/http/) to check all the features of the API.\" , \"avatar\" : \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\" , \"type\" : \"service\" , \"image\" : { \"hash\" : \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\" , \"size\" : 25738523 , \"path\" : \"ipfs.dnp.dappnode.eth_0.2.0.tar.xz\" , \"volumes\" : [ \"/var/run/docker.sock:/var/run/docker.sock\" , \"/usr/src/dappnode/config:/usr/src/app/config:ro\" , \"ipfsdnpdappnodeeth_data:/data/ipfs\" ], \"external_vol\" : [ \"dncore_ethchaindnpdappnodeeth_data:/app/.ethchain:ro\" ], \"ports\" : [ \"1194:1194/udp\" , \"8090:3000/udp\" ], \"environment\" : [ \"RACK_ENV=development\" , \"SHOW=true\" , \"EXTRA_OPTS=\" , \"EMPTY_ENV\" ], \"restart\" : \"always\" , \"privileged\" : true , \"cap_add\" : [ \"NET_ADMIN\" , \"SYS_ADMIN\" ], \"cap_drop\" : [ \"NET_ADMIN\" , \"SYS_ADMIN\" ], \"devices\" : [ \"/dev/ttyUSB0:/dev/ttyUSB0\" , \"/dev/sda:/dev/xvdc:rwm\" ], \"subnet\" : \"172.33.0.0/16\" , \"ipv4_address\" : \"172.33.1.4\" , \"network_mode\" : \"bridge\" , \"command\" : \"bundle exec thin -p 3000\" , \"labels\" : [ \"eth.dappnode.dnp.my-dnp.developer=Awesome_Name\" ] }, \"chain\" : \"ethereum\" , \"dependencies\" : { \"bitcoin.dnp.dappnode.eth\" : \"^0.1.2\" , \"swarm.dnp.dappnode.eth\" : \"latest\" }, \"requirements\" : { \"minimumDappnodeVersion\" : \"0.2.0\" }, \"backup\" : [ { \"name\" : \"keystore\" , \"path\" : \"/root/.raiden/secret/keystore\" } ], \"changelog\" : \"Brief summary of the most relevant changes that the user must known before installing\" , \"warnings\" : { \"onInstall\" : \"You must set the PASSWORD ENV before installing the DAppNode Package in order for the setup to work correctly.\" , \"onUpdate\" : \"Your VPN connection will be lost when the VPN finalizes updating. Leave 1-2 minutes after executing the update and then reconnect and refresh this site.\" , \"onReset\" : \"You MUST properly close your open channels before resetting this DAppNode Package or you may lose your funds.\" , \"onRemove\" : \"You MUST properly close your open channels before removing this DAppNode Package or you may lose your funds.\" }, \"updateAlerts\" : [ { \"from\" : \"0.1.x\" , \"to\" : \"0.1.x\" , \"message\" : \"Major update to OpenVPN: This update breaks compatibility with the last VPN version. Please read the migration guide: https://migration020.dappnode.io\" } ], \"disclaimer\" : { \"message\" : \"This software is experimental, presented \u201cas is\u201d and inherently carries risks.\" }, \"style\" : { \"featuredBackground\" : \"linear-gradient(to right, #323131, #395353)\" , \"featuredColor\" : \"white\" , \"featuredAvatarFilter\" : \"invert(1)\" }, \"author\" : \"DAppNode Association <admin@dappnode.io> (https://github.com/dappnode)\" , \"contributors\" : [ \"Michael First <developerHanlder@project.io> (https://github.com/developerHanlder)\" , \"Michael Second <developerHanlder@project.io> (https://github.com/developerHanlder)\" ], \"categories\" : [ \"Developer tools\" , \"Blockchain\" ], \"keywords\" : [ \"DAppNodeCore\" ], \"links\" : { \"homepage\" : \"https://github.com/dappnode/DNP_IPFS#readme\" , \"ui\" : \"http://ipfs.dappnode:5001/webui\" , \"api\" : \"http://ipfs.dappnode:5001/api/v0\" , \"gateway\" : \"http://ipfs.dappnode:8080/ipfs\" }, \"repository\" : { \"type\" : \"git\" , \"url\" : \"https://github.com/dappnode/DNP_IPFS.git\" , \"directory\" : \"packages/react-dom\" }, \"bugs\" : { \"url\" : \"https://github.com/dappnode/DNP_IPFS/issues\" }, \"license\" : \"GPL-3.0\" } Properties reference Property Type Required name string Required version string Required upstreamVersion string Optional shortDescription string Optional description string Required avatar string Required type enum Required image object Required chain enum Optional dependencies object Optional requirements object Optional backup object[] Optional changelog string Optional warnings object Optional updateAlerts object[] Optional disclaimer object Optional style object Optional author string Optional contributors string[] Optional categories enum[] Optional keywords string[] Optional links object Optional repository object Optional bugs object Optional license string Required name DAppNode Package ENS name. is required type: string Example: \"ipfs.dnp.dappnode.eth\" version DAppNode Package semantic version (semver). is required type: string All instances must conform to this regular expression ^ ((([ 0 - 9 ] + ).([ 0 - 9 ] + ).([ 0 - 9 ] + ))) $ test example: 0.2.0 Example: \"0.2.0\" upstreamVersion For DAppNode Packages that only wrap existing software (i.e. Bitcoin node, Ethereum node), the underlying software version can be specified here. It will be shown in the admin UI alongside the field version . is optional type: string All instances must conform to this regular expression ^ ((([ 0 - 9 ] + ).([ 0 - 9 ] + ).([ 0 - 9 ] + ))) $ test example: 2.6.0 Example: \"2.6.0\" shortDescription Short DAppNode Package description, 6-8 words sentence briefly describing the purpose of this DAppNode Package. The purpose is to quickly grab users' attention and clearly define its purpose. Markdown is discouraged as it will NOT be rendered on the DAppNode Package store view. is optional type: string Example: \"Distributed file system for storing and accessing data.\" description DAppNode Package description. Markdown and links are allowed and ecouraged to give users the option to read more information about this DAppNode Package. is required type: string Example: \"Welcome! IPFS is a distributed system for storing and accessing files, websites, applications, and data. If you\u2019re new to IPFS, check our [introductory page](https://ipfs.io/#why) for an easy overview. \\n\\nWith this node you can upload and download files from IPFS using it own fancy web console at [http://ipfs.dappnode:5001/webui](http://ipfs.dappnode:5001/webui). Other DAppNode Packages and external applications can use its API at the endpoint `http://ipfs.dappnode:5001/api`. Go to the [IPFS HTTP API full reference](https://docs.ipfs.io/reference/api/http/) to check all the features of the API.\" avatar IPFS / BZZ hash of the Avatar of this DAppNode Package. Must be a 300 x 300px transparent PNG. It is strongly encouraged that you optimize the .png before uploading it to minimize its size. is required type: string minimum length: 46 characters All instances must conform to this regular expression ^/ ( ipfs | bzz ) / \\ w + $ test example: /ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8 Example: \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\" type Type of this DAppNode Package. It is used to trigger some special features such as core functionality. is required default: \"service\" type: string The value of this property must be equal to one of the known values below. Value Description service Can have ENVs a depend on library DAppNode Packages library Should not have ENVs and cannot depend on service DAppNode Packages dncore DAppNode Packages that are part of the DAppNode core and have special permissions Examples: \"service\" \"dncore\" image Docker compose properties from which this DAppNode Package's docker-compose.yml will be generated. Also includes upload data to fetch the image tarball from IPFS of BZZ. is required type: object with the following properties: Property Type Required Default hash string Required size integer Required path string Optional volumes array Optional external_vol array Optional ports array Optional environment array Optional restart string Optional \"always\" privileged boolean Optional cap_add array Optional cap_drop array Optional devices array Optional subnet string Optional ipv4_address string Optional network_mode string Optional command string Optional labels array Optional hash IPFS / BZZ hash of the DAppNode Package image. is required type: string minimum length: 46 characters All instances must conform to this regular expression ^/ ( ipfs | bzz ) / \\ w + $ test example: /ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8 Example: \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\" size Size of the DAppNode Package image in bytes. Necessary to show a correct download progress bar when user's install this DAppNode Package. is required type: integer minimum value: 1 Example: 25738523 path The filename of the DAppNode Package image. is optional type: string minimum length: 1 characters Example: \"ipfs.dnp.dappnode.eth_0.2.0.tar.xz\" volumes DAppNode Package volume mappings. is optional type: Array type: string[] All items must be of the type: string All instances must conform to this regular expression (test examples here ): ^ [ ^ \\ s ] + :[ ^ \\ s ] + $ Docker volumes short syntax HOST:CONTAINER:ro mapping. Go to the docker-compose file volumes reference for valid values. Example: [ \"/var/run/docker.sock:/var/run/docker.sock\" , \"/usr/src/dappnode/config:/usr/src/app/config:ro\" , \"ipfsdnpdappnodeeth_data:/data/ipfs\" ] external_vol DAppNode Package external volume mappings, volumes have been created outside of this DAppNode Package's compose. is optional type: Array type: string[] All items must be of the type: string All instances must conform to this regular expression (test examples here ): ^ [ ^ \\ s ] + :[ ^ \\ s ] + $ Docker volumes short syntax HOST:CONTAINER:ro mapping. Go to the docker-compose file external volumes reference for valid values. Examples: [ \"dncore_ethchaindnpdappnodeeth_data:/app/.ethchain:ro\" ] [ \"nginxproxydnpdappnodeeth_vhost.d:/etc/nginx/vhost.d\" , \"nginxproxydnpdappnodeeth_html:/usr/share/nginx/html\" ] ports DAppNode Package port mappings. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Docker ports short syntax HOST:CONTAINER/protocol . Go to the docker-compose file ports reference for valid values. Examples: [ \"1194:1194/udp\" , \"8090:3000/udp\" ] [ \"4001/udp\" , \"4001/tcp\" ] [ \"4001\" ] environment DAppNode Package environment variables. You must declare all ENVs even if they are empty. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Docker environment variables in array form, in the format KEY=VALUE . Go to the docker-compose file environment reference for valid values. Example: [ \"RACK_ENV=development\" , \"SHOW=true\" , \"EXTRA_OPTS=\" , \"EMPTY_ENV\" ] restart Docker restart policy, 'always' is highly recommended. Go to the docker-compose file restart reference for more details. is optional default: \"always\" type: string The value of this property must be equal to one of the known values below. Value Description always Always restarts no Does not restart under any circumstance on-failure Restarts if the exit code indicates an on-failure error unless-stopped Restarts unless Docker itself is stopped or restarted Example: \"always\" privileged Grant the DAppNode Package (almost) all the capabilities of their host machine, regarding kernel features and device access. Go to this docker article about priviledge mode for more details. is optional type: boolean Example: true cap_add Add container capabilities. Go to the docker-compose file cap_add reference for more details is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters A valid docker capability key. Go to the docker reference about Linux capabilities for valid values and their meaning. Examples: [ \"NET_ADMIN\" , \"SYS_ADMIN\" ] [ \"ALL\" ] cap_drop Drop container capabilities. Go to the docker-compose file cap_drop reference for more details is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters A valid docker capability key. Go to the docker reference about Linux capabilities for valid values and their meaning. Example: [ \"NET_ADMIN\" , \"SYS_ADMIN\" ] devices Allows you to run devices inside the container without the privileged flag. Must be a list of device mappings. Uses the same format as the --device docker client create option. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters A valid docker device mapping. Go to the docker reference about runtime privileges for valid values and more details. Example: [ \"/dev/ttyUSB0:/dev/ttyUSB0\" , \"/dev/sda:/dev/xvdc:rwm\" ] subnet Specify the subnet. Go to the docker-compose file ipv4_address-ipv6_address reference for valid values. is optional type: string All instances must conform to this regular expression ^ ( ? :[ 0 - 9 ] { 1 , 3 } .) { 3 } [ 0 - 9 ] { 1 , 3 } / [ 0 - 9 ] + $ test example: 172.33.0.0/16 Example: \"172.33.0.0/16\" ipv4_address Specify a static IP address for containers for this service when joining the network. Go to the docker-compose file ipv4_address-ipv6_address reference for valid values. is optional type: string All instances must conform to this regular expression ^ ( ? :[ 0 - 9 ] { 1 , 3 } .) { 3 } [ 0 - 9 ] { 1 , 3 }$ test example: 172.33.1.4 Example: \"172.33.1.4\" network_mode Connect this DAppNode Package to a specific network. See https://docs.docker.com/engine/reference/run/#network-settings. is optional type: string minimum length: 1 characters Examples: \"bridge\" \"host\" \"none\" command Override the default command. Go to the docker-compose file command reference for valid values. is optional type: string minimum length: 1 characters Example: \"bundle exec thin -p 3000\" labels Labels to be added to the DAppNode Package's docker container. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Use reverse-DNS notation ( eth.dappnode.dnp.my-dnp.developer ) to prevent label conflicts. Go to the docker-compose file labels reference for valid values. Example: [ \"eth.dappnode.dnp.my-dnp.developer=Awesome_Name\" ] chain Indicate that this DAppNode Package is a blockchain node so the admin UI shows its syncing status is optional type: string The value of this property must be equal to one of the known values below. Value Description ethereum Must have an Ethereum JSON RPC exposed internally at port 8545 bitcoin Must have a standard Bitcoin JSON API exposed at the default port (8332). Uses the NPM package bitcoin-core monero Must have a Monero API exposed internally at port 18081. Uses the NPM package monero-rpc Examples: \"ethereum\" \"bitcoin\" \"monero\" dependencies DAppNode Package dependencies. Must be an object where the keys are the DAppNode Package's ENS. The values must be a semantic range, i.e. '0.2.0' , '^0.2.1' , '*' , 'latest' , '/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8' . is optional type: object with the following properties: Property Type Required Examples: { \"bitcoin.dnp.dappnode.eth\" : \"^0.1.2\" , \"swarm.dnp.dappnode.eth\" : \"latest\" } { \"only-for-dev-1.dappnode.eth\" : \"/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o\" , \"only-for-dev-2.dappnode.eth\" : \"/ipfs/zdj7WWeQ43G6JJvLWQWZpyHuAMq6uYWRjkBXFad11vE2LHhQ7\" } requirements Specify requirements to be met before allowing users to install this DAppNode Package. is optional type: object with the following properties: Property Type Required minimumDappnodeVersion string Optional minimumDappnodeVersion Minimum DAppNode version that includes all the features necessary to run this DAppNode Package. is optional type: string All instances must conform to this regular expression ^ ((([ 0 - 9 ] + ).([ 0 - 9 ] + ).([ 0 - 9 ] + ))) $ test example: 0.2.0 Example: \"0.2.0\" backup Allows users to download and restore a backup of key files of this package. If this property is non-empty array, a new view will be available in the admin UI for this DAppNode Package. The files or directories specified in the array will be bundled in a tarball. As long as the name properties stay the same, their associated paths can change in future versions. Then, when restoring an old backup, the new paths will be associated to files stored under the same name keys. Note: it is recommended to only backup lightweight files such as configs, keys or passwords. is optional type: Array type: object[] All items must be of the type: object with the following properties: Property Type Required name string Required path string Required name A key identifier of this file or directory. Its purpose is to allow the path to change in the future. is required type: string minimum length: 1 characters Examples: \"keystore\" \"config\" \"keys\" path Path to the file or directory to backup. It MUST be an absolute path (do not use the ~ character) for the backup tool to work correctly. is required type: string minimum length: 1 characters Examples: \"/root/.raiden/secret/keystore\" \"/usr/src/app/config.json\" changelog Description of relevant changes of this specific version. Supports markdown and links. is optional type: string Example: \"Brief summary of the most relevant changes that the user must known before installing\" warnings Very relevant information that MUST be shown to the user BEFORE executing a specific action in the DAppNode Package's lifecycle. is optional type: object with the following properties: Property Type Required onInstall string Optional onUpdate string Optional onReset string Optional onRemove string Optional onInstall Will be shown before installing the DAppNode Package. is optional type: string Example: \"You must set the PASSWORD ENV before installing the DAppNode Package in order for the setup to work correctly.\" onUpdate Will be shown before updating the DAppNode Package, not in the first installation. is optional type: string Example: \"Your VPN connection will be lost when the VPN finalizes updating. Leave 1-2 minutes after executing the update and then reconnect and refresh this site.\" onReset Will be shown before resetting the DAppNode Package. is optional type: string Example: \"You MUST properly close your open channels before resetting this DAppNode Package or you may lose your funds.\" onRemove Will be shown before removing the DAppNode Package. is optional type: string Example: \"You MUST properly close your open channels before removing this DAppNode Package or you may lose your funds.\" updateAlerts Alerts targeted to a specific update jump. is optional type: Array type: object[] All items must be of the type: object with the following properties: Property Type Required Default from string Required to string Optional \"*\" message string Required from Semver range, show this message when a user updates this DAppNode Package FROM a version that satisfies this range. is required type: string minimum length: 1 characters Examples: \"0.1.x\" \"^0.2.0\" to Semver range, show this message when a user updates this DAppNode Package TO a version that satisfies this range. is optional default: \"*\" type: string minimum length: 1 characters Examples: \"0.1.x\" \"^0.2.0\" \"*\" message Alert message to be shown when from and to ranges are satisfied. is required type: string minimum length: 1 characters Example: \"Major update to OpenVPN: This update breaks compatibility with the last VPN version. Please read the migration guide: https://migration020.dappnode.io\" Specific update jump alert. disclaimer Disclaimer to be shown to the user on install, and will require the user to approve it. is optional type: object with the following properties: Property Type Required message string Required message The message shown in the pop-up. Markdown and links are allowed. is required type: string Example: \"This software is experimental, presented \u201cas is\u201d and inherently carries risks.\" style Graphic information to control the appearance of DAppNode Package related items in the admin UI. is optional type: object with the following properties: Property Type Required featuredBackground string Optional featuredColor string Optional featuredAvatarFilter string Optional featuredBackground CSS background property to be applied to the DAppNode Package card in the DAppNode Package store if featured. Go to the Mozilla CSS background reference for valid values. is optional type: string Examples: \"linear-gradient(to right, #323131, #395353)\" \"black\" featuredColor CSS color property to be applied to the DAppNode Package card in the DAppNode Package store if featured. Go to the Mozilla CSS color reference for valid values. is optional type: string Examples: \"white\" \"#fff\" featuredAvatarFilter CSS filter property to be applied to <img> component (avatar) of the DAppNode Package card in the DAppNode Package store if featured. Go to the Mozilla CSS filter reference for valid values. is optional type: string Examples: \"invert(1)\" \"grayscale(80%);\" author Main author of this DAppNode Package. Must follow the structure ${name} <${email}> (${githubUserLink}) . is optional type: string minimum length: 1 characters Example: \"DAppNode Association <admin@dappnode.io> (https://github.com/dappnode)\" contributors Contributing authors of this DAppNode Package. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Contributor author. Must follow the structure ${name} <${email}> (${githubUserLink}) . Example: [ \"Michael First <developerHanlder@project.io> (https://github.com/developerHanlder)\" , \"Michael Second <developerHanlder@project.io> (https://github.com/developerHanlder)\" ] categories Categories to organize and group DAppNode Packages in the DAppNode Package store. Only one or two categories maximum should be specified per package. If you feel that any of the current categories represent the nature of your package, please open an issue requesting a new category https://github.com/dappnode/dnp-manifest/issues/new is optional type: Array type: enum[] All items must be of the type: string The value of this property must be equal to one of the known values below. Value Description Developer tools Packages that their main purpose is to aid in developing, i.e. testnets Blockchain Blockchain nodes, i.e. Bitcoin, Monero Economic incentive Packages that offer an economic incentive or reward to the admin that runs it, i.e. Lightning Network Payment channels Packages whose main purpose is to manage or control payment channels, i.e. Raiden Storage Decentralized storage solutions, i.e. Swarm Communications Decentralized networking or chat solutions, i.e. Swarm Example: [ \"Developer tools\" , \"Blockchain\" ] keywords Keywords, relevant and descriptive of this DAppNode Package. They will be shown in the admin UI DAppNode Package store. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Single keyword. links Various links (URLs) useful for the user of this package. All links will be shown in the dedicated view of this package in the admin UI. The predefined links properties below will be shown with concept related icons. Other links will be shown as well but with their plain name instead of an icon. is optional type: object with the following properties: Property Type Required homepage string Optional ui string Optional api string Optional gateway string Optional homepage Url to an informative homepage for this DAppNode Package. Should be a README or landing website. is optional type: string Example: \"https://github.com/dappnode/DNP_IPFS#readme\" ui Url to this DNP's DAppNode local UI. is optional type: string Example: \"http://ipfs.dappnode:5001/webui\" api Url to this DNP's DAppNode local HTTP API endpoint. is optional type: string Example: \"http://ipfs.dappnode:5001/api/v0\" gateway Url to this DNP's DAppNode local gateway. is optional type: string Example: \"http://ipfs.dappnode:8080/ipfs\" repository DAppNode Package's repository. Must be a publicly available url that can be handed directly to a VCS program. is optional type: object with the following properties: Property Type Required type string Required url string Required directory string Optional type is required type: string minimum length: 1 characters Example: \"git\" url is required type: string minimum length: 1 characters Example: \"https://github.com/dappnode/DNP_IPFS.git\" directory is optional type: string Example: \"packages/react-dom\" bugs Url to your project\u2019s issue tracker. is optional type: object with the following properties: Property Type Required url string Required url is required type: string Example: \"https://github.com/dappnode/DNP_IPFS/issues\" license DAppNode Package's License. is required type: string minimum length: 1 characters Example: \"GPL-3.0\"","title":"DNP Manifest Reference"},{"location":"manifest-reference/#dappnode-package-dnp-manifest","text":"The DAppNode Package manifest defines all the necessary information for a DAppNode to understand this package: IPFS of BZZ hashes to download its docker image Docker related data to configure and run its container Metadata to control how the package is shown in the admin UI.","title":"DAppNode Package (DNP) manifest"},{"location":"manifest-reference/#example","text":"{ \"name\" : \"ipfs.dnp.dappnode.eth\" , \"version\" : \"0.2.0\" , \"upstreamVersion\" : \"2.6.0\" , \"shortDescription\" : \"Distributed file system for storing and accessing data.\" , \"description\" : \"Welcome! IPFS is a distributed system for storing and accessing files, websites, applications, and data. If you\u2019re new to IPFS, check our [introductory page](https://ipfs.io/#why) for an easy overview. \\n\\nWith this node you can upload and download files from IPFS using it own fancy web console at [http://ipfs.dappnode:5001/webui](http://ipfs.dappnode:5001/webui). Other DAppNode Packages and external applications can use its API at the endpoint `http://ipfs.dappnode:5001/api`. Go to the [IPFS HTTP API full reference](https://docs.ipfs.io/reference/api/http/) to check all the features of the API.\" , \"avatar\" : \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\" , \"type\" : \"service\" , \"image\" : { \"hash\" : \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\" , \"size\" : 25738523 , \"path\" : \"ipfs.dnp.dappnode.eth_0.2.0.tar.xz\" , \"volumes\" : [ \"/var/run/docker.sock:/var/run/docker.sock\" , \"/usr/src/dappnode/config:/usr/src/app/config:ro\" , \"ipfsdnpdappnodeeth_data:/data/ipfs\" ], \"external_vol\" : [ \"dncore_ethchaindnpdappnodeeth_data:/app/.ethchain:ro\" ], \"ports\" : [ \"1194:1194/udp\" , \"8090:3000/udp\" ], \"environment\" : [ \"RACK_ENV=development\" , \"SHOW=true\" , \"EXTRA_OPTS=\" , \"EMPTY_ENV\" ], \"restart\" : \"always\" , \"privileged\" : true , \"cap_add\" : [ \"NET_ADMIN\" , \"SYS_ADMIN\" ], \"cap_drop\" : [ \"NET_ADMIN\" , \"SYS_ADMIN\" ], \"devices\" : [ \"/dev/ttyUSB0:/dev/ttyUSB0\" , \"/dev/sda:/dev/xvdc:rwm\" ], \"subnet\" : \"172.33.0.0/16\" , \"ipv4_address\" : \"172.33.1.4\" , \"network_mode\" : \"bridge\" , \"command\" : \"bundle exec thin -p 3000\" , \"labels\" : [ \"eth.dappnode.dnp.my-dnp.developer=Awesome_Name\" ] }, \"chain\" : \"ethereum\" , \"dependencies\" : { \"bitcoin.dnp.dappnode.eth\" : \"^0.1.2\" , \"swarm.dnp.dappnode.eth\" : \"latest\" }, \"requirements\" : { \"minimumDappnodeVersion\" : \"0.2.0\" }, \"backup\" : [ { \"name\" : \"keystore\" , \"path\" : \"/root/.raiden/secret/keystore\" } ], \"changelog\" : \"Brief summary of the most relevant changes that the user must known before installing\" , \"warnings\" : { \"onInstall\" : \"You must set the PASSWORD ENV before installing the DAppNode Package in order for the setup to work correctly.\" , \"onUpdate\" : \"Your VPN connection will be lost when the VPN finalizes updating. Leave 1-2 minutes after executing the update and then reconnect and refresh this site.\" , \"onReset\" : \"You MUST properly close your open channels before resetting this DAppNode Package or you may lose your funds.\" , \"onRemove\" : \"You MUST properly close your open channels before removing this DAppNode Package or you may lose your funds.\" }, \"updateAlerts\" : [ { \"from\" : \"0.1.x\" , \"to\" : \"0.1.x\" , \"message\" : \"Major update to OpenVPN: This update breaks compatibility with the last VPN version. Please read the migration guide: https://migration020.dappnode.io\" } ], \"disclaimer\" : { \"message\" : \"This software is experimental, presented \u201cas is\u201d and inherently carries risks.\" }, \"style\" : { \"featuredBackground\" : \"linear-gradient(to right, #323131, #395353)\" , \"featuredColor\" : \"white\" , \"featuredAvatarFilter\" : \"invert(1)\" }, \"author\" : \"DAppNode Association <admin@dappnode.io> (https://github.com/dappnode)\" , \"contributors\" : [ \"Michael First <developerHanlder@project.io> (https://github.com/developerHanlder)\" , \"Michael Second <developerHanlder@project.io> (https://github.com/developerHanlder)\" ], \"categories\" : [ \"Developer tools\" , \"Blockchain\" ], \"keywords\" : [ \"DAppNodeCore\" ], \"links\" : { \"homepage\" : \"https://github.com/dappnode/DNP_IPFS#readme\" , \"ui\" : \"http://ipfs.dappnode:5001/webui\" , \"api\" : \"http://ipfs.dappnode:5001/api/v0\" , \"gateway\" : \"http://ipfs.dappnode:8080/ipfs\" }, \"repository\" : { \"type\" : \"git\" , \"url\" : \"https://github.com/dappnode/DNP_IPFS.git\" , \"directory\" : \"packages/react-dom\" }, \"bugs\" : { \"url\" : \"https://github.com/dappnode/DNP_IPFS/issues\" }, \"license\" : \"GPL-3.0\" }","title":"Example"},{"location":"manifest-reference/#properties-reference","text":"Property Type Required name string Required version string Required upstreamVersion string Optional shortDescription string Optional description string Required avatar string Required type enum Required image object Required chain enum Optional dependencies object Optional requirements object Optional backup object[] Optional changelog string Optional warnings object Optional updateAlerts object[] Optional disclaimer object Optional style object Optional author string Optional contributors string[] Optional categories enum[] Optional keywords string[] Optional links object Optional repository object Optional bugs object Optional license string Required","title":"Properties reference"},{"location":"manifest-reference/#name","text":"DAppNode Package ENS name. is required type: string Example: \"ipfs.dnp.dappnode.eth\"","title":"name"},{"location":"manifest-reference/#version","text":"DAppNode Package semantic version (semver). is required type: string All instances must conform to this regular expression ^ ((([ 0 - 9 ] + ).([ 0 - 9 ] + ).([ 0 - 9 ] + ))) $ test example: 0.2.0 Example: \"0.2.0\"","title":"version"},{"location":"manifest-reference/#upstreamversion","text":"For DAppNode Packages that only wrap existing software (i.e. Bitcoin node, Ethereum node), the underlying software version can be specified here. It will be shown in the admin UI alongside the field version . is optional type: string All instances must conform to this regular expression ^ ((([ 0 - 9 ] + ).([ 0 - 9 ] + ).([ 0 - 9 ] + ))) $ test example: 2.6.0 Example: \"2.6.0\"","title":"upstreamVersion"},{"location":"manifest-reference/#shortdescription","text":"Short DAppNode Package description, 6-8 words sentence briefly describing the purpose of this DAppNode Package. The purpose is to quickly grab users' attention and clearly define its purpose. Markdown is discouraged as it will NOT be rendered on the DAppNode Package store view. is optional type: string Example: \"Distributed file system for storing and accessing data.\"","title":"shortDescription"},{"location":"manifest-reference/#description","text":"DAppNode Package description. Markdown and links are allowed and ecouraged to give users the option to read more information about this DAppNode Package. is required type: string Example: \"Welcome! IPFS is a distributed system for storing and accessing files, websites, applications, and data. If you\u2019re new to IPFS, check our [introductory page](https://ipfs.io/#why) for an easy overview. \\n\\nWith this node you can upload and download files from IPFS using it own fancy web console at [http://ipfs.dappnode:5001/webui](http://ipfs.dappnode:5001/webui). Other DAppNode Packages and external applications can use its API at the endpoint `http://ipfs.dappnode:5001/api`. Go to the [IPFS HTTP API full reference](https://docs.ipfs.io/reference/api/http/) to check all the features of the API.\"","title":"description"},{"location":"manifest-reference/#avatar","text":"IPFS / BZZ hash of the Avatar of this DAppNode Package. Must be a 300 x 300px transparent PNG. It is strongly encouraged that you optimize the .png before uploading it to minimize its size. is required type: string minimum length: 46 characters All instances must conform to this regular expression ^/ ( ipfs | bzz ) / \\ w + $ test example: /ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8 Example: \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\"","title":"avatar"},{"location":"manifest-reference/#type","text":"Type of this DAppNode Package. It is used to trigger some special features such as core functionality. is required default: \"service\" type: string The value of this property must be equal to one of the known values below. Value Description service Can have ENVs a depend on library DAppNode Packages library Should not have ENVs and cannot depend on service DAppNode Packages dncore DAppNode Packages that are part of the DAppNode core and have special permissions Examples: \"service\" \"dncore\"","title":"type"},{"location":"manifest-reference/#image","text":"Docker compose properties from which this DAppNode Package's docker-compose.yml will be generated. Also includes upload data to fetch the image tarball from IPFS of BZZ. is required type: object with the following properties: Property Type Required Default hash string Required size integer Required path string Optional volumes array Optional external_vol array Optional ports array Optional environment array Optional restart string Optional \"always\" privileged boolean Optional cap_add array Optional cap_drop array Optional devices array Optional subnet string Optional ipv4_address string Optional network_mode string Optional command string Optional labels array Optional","title":"image"},{"location":"manifest-reference/#hash","text":"IPFS / BZZ hash of the DAppNode Package image. is required type: string minimum length: 46 characters All instances must conform to this regular expression ^/ ( ipfs | bzz ) / \\ w + $ test example: /ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8 Example: \"/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8\"","title":"hash"},{"location":"manifest-reference/#size","text":"Size of the DAppNode Package image in bytes. Necessary to show a correct download progress bar when user's install this DAppNode Package. is required type: integer minimum value: 1 Example: 25738523","title":"size"},{"location":"manifest-reference/#path","text":"The filename of the DAppNode Package image. is optional type: string minimum length: 1 characters Example: \"ipfs.dnp.dappnode.eth_0.2.0.tar.xz\"","title":"path"},{"location":"manifest-reference/#volumes","text":"DAppNode Package volume mappings. is optional type: Array type: string[] All items must be of the type: string All instances must conform to this regular expression (test examples here ): ^ [ ^ \\ s ] + :[ ^ \\ s ] + $ Docker volumes short syntax HOST:CONTAINER:ro mapping. Go to the docker-compose file volumes reference for valid values. Example: [ \"/var/run/docker.sock:/var/run/docker.sock\" , \"/usr/src/dappnode/config:/usr/src/app/config:ro\" , \"ipfsdnpdappnodeeth_data:/data/ipfs\" ]","title":"volumes"},{"location":"manifest-reference/#external_vol","text":"DAppNode Package external volume mappings, volumes have been created outside of this DAppNode Package's compose. is optional type: Array type: string[] All items must be of the type: string All instances must conform to this regular expression (test examples here ): ^ [ ^ \\ s ] + :[ ^ \\ s ] + $ Docker volumes short syntax HOST:CONTAINER:ro mapping. Go to the docker-compose file external volumes reference for valid values. Examples: [ \"dncore_ethchaindnpdappnodeeth_data:/app/.ethchain:ro\" ] [ \"nginxproxydnpdappnodeeth_vhost.d:/etc/nginx/vhost.d\" , \"nginxproxydnpdappnodeeth_html:/usr/share/nginx/html\" ]","title":"external_vol"},{"location":"manifest-reference/#ports","text":"DAppNode Package port mappings. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Docker ports short syntax HOST:CONTAINER/protocol . Go to the docker-compose file ports reference for valid values. Examples: [ \"1194:1194/udp\" , \"8090:3000/udp\" ] [ \"4001/udp\" , \"4001/tcp\" ] [ \"4001\" ]","title":"ports"},{"location":"manifest-reference/#environment","text":"DAppNode Package environment variables. You must declare all ENVs even if they are empty. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Docker environment variables in array form, in the format KEY=VALUE . Go to the docker-compose file environment reference for valid values. Example: [ \"RACK_ENV=development\" , \"SHOW=true\" , \"EXTRA_OPTS=\" , \"EMPTY_ENV\" ]","title":"environment"},{"location":"manifest-reference/#restart","text":"Docker restart policy, 'always' is highly recommended. Go to the docker-compose file restart reference for more details. is optional default: \"always\" type: string The value of this property must be equal to one of the known values below. Value Description always Always restarts no Does not restart under any circumstance on-failure Restarts if the exit code indicates an on-failure error unless-stopped Restarts unless Docker itself is stopped or restarted Example: \"always\"","title":"restart"},{"location":"manifest-reference/#privileged","text":"Grant the DAppNode Package (almost) all the capabilities of their host machine, regarding kernel features and device access. Go to this docker article about priviledge mode for more details. is optional type: boolean Example: true","title":"privileged"},{"location":"manifest-reference/#cap_add","text":"Add container capabilities. Go to the docker-compose file cap_add reference for more details is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters A valid docker capability key. Go to the docker reference about Linux capabilities for valid values and their meaning. Examples: [ \"NET_ADMIN\" , \"SYS_ADMIN\" ] [ \"ALL\" ]","title":"cap_add"},{"location":"manifest-reference/#cap_drop","text":"Drop container capabilities. Go to the docker-compose file cap_drop reference for more details is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters A valid docker capability key. Go to the docker reference about Linux capabilities for valid values and their meaning. Example: [ \"NET_ADMIN\" , \"SYS_ADMIN\" ]","title":"cap_drop"},{"location":"manifest-reference/#devices","text":"Allows you to run devices inside the container without the privileged flag. Must be a list of device mappings. Uses the same format as the --device docker client create option. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters A valid docker device mapping. Go to the docker reference about runtime privileges for valid values and more details. Example: [ \"/dev/ttyUSB0:/dev/ttyUSB0\" , \"/dev/sda:/dev/xvdc:rwm\" ]","title":"devices"},{"location":"manifest-reference/#subnet","text":"Specify the subnet. Go to the docker-compose file ipv4_address-ipv6_address reference for valid values. is optional type: string All instances must conform to this regular expression ^ ( ? :[ 0 - 9 ] { 1 , 3 } .) { 3 } [ 0 - 9 ] { 1 , 3 } / [ 0 - 9 ] + $ test example: 172.33.0.0/16 Example: \"172.33.0.0/16\"","title":"subnet"},{"location":"manifest-reference/#ipv4_address","text":"Specify a static IP address for containers for this service when joining the network. Go to the docker-compose file ipv4_address-ipv6_address reference for valid values. is optional type: string All instances must conform to this regular expression ^ ( ? :[ 0 - 9 ] { 1 , 3 } .) { 3 } [ 0 - 9 ] { 1 , 3 }$ test example: 172.33.1.4 Example: \"172.33.1.4\"","title":"ipv4_address"},{"location":"manifest-reference/#network_mode","text":"Connect this DAppNode Package to a specific network. See https://docs.docker.com/engine/reference/run/#network-settings. is optional type: string minimum length: 1 characters Examples: \"bridge\" \"host\" \"none\"","title":"network_mode"},{"location":"manifest-reference/#command","text":"Override the default command. Go to the docker-compose file command reference for valid values. is optional type: string minimum length: 1 characters Example: \"bundle exec thin -p 3000\"","title":"command"},{"location":"manifest-reference/#labels","text":"Labels to be added to the DAppNode Package's docker container. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Use reverse-DNS notation ( eth.dappnode.dnp.my-dnp.developer ) to prevent label conflicts. Go to the docker-compose file labels reference for valid values. Example: [ \"eth.dappnode.dnp.my-dnp.developer=Awesome_Name\" ]","title":"labels"},{"location":"manifest-reference/#chain","text":"Indicate that this DAppNode Package is a blockchain node so the admin UI shows its syncing status is optional type: string The value of this property must be equal to one of the known values below. Value Description ethereum Must have an Ethereum JSON RPC exposed internally at port 8545 bitcoin Must have a standard Bitcoin JSON API exposed at the default port (8332). Uses the NPM package bitcoin-core monero Must have a Monero API exposed internally at port 18081. Uses the NPM package monero-rpc Examples: \"ethereum\" \"bitcoin\" \"monero\"","title":"chain"},{"location":"manifest-reference/#dependencies","text":"DAppNode Package dependencies. Must be an object where the keys are the DAppNode Package's ENS. The values must be a semantic range, i.e. '0.2.0' , '^0.2.1' , '*' , 'latest' , '/ipfs/QmWwMb3XhuCH6JnCF6m6EQzA4mW9pHHtg7rqAfhDr2ofi8' . is optional type: object with the following properties: Property Type Required Examples: { \"bitcoin.dnp.dappnode.eth\" : \"^0.1.2\" , \"swarm.dnp.dappnode.eth\" : \"latest\" } { \"only-for-dev-1.dappnode.eth\" : \"/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o\" , \"only-for-dev-2.dappnode.eth\" : \"/ipfs/zdj7WWeQ43G6JJvLWQWZpyHuAMq6uYWRjkBXFad11vE2LHhQ7\" }","title":"dependencies"},{"location":"manifest-reference/#requirements","text":"Specify requirements to be met before allowing users to install this DAppNode Package. is optional type: object with the following properties: Property Type Required minimumDappnodeVersion string Optional","title":"requirements"},{"location":"manifest-reference/#minimumdappnodeversion","text":"Minimum DAppNode version that includes all the features necessary to run this DAppNode Package. is optional type: string All instances must conform to this regular expression ^ ((([ 0 - 9 ] + ).([ 0 - 9 ] + ).([ 0 - 9 ] + ))) $ test example: 0.2.0 Example: \"0.2.0\"","title":"minimumDappnodeVersion"},{"location":"manifest-reference/#backup","text":"Allows users to download and restore a backup of key files of this package. If this property is non-empty array, a new view will be available in the admin UI for this DAppNode Package. The files or directories specified in the array will be bundled in a tarball. As long as the name properties stay the same, their associated paths can change in future versions. Then, when restoring an old backup, the new paths will be associated to files stored under the same name keys. Note: it is recommended to only backup lightweight files such as configs, keys or passwords. is optional type: Array type: object[] All items must be of the type: object with the following properties: Property Type Required name string Required path string Required","title":"backup"},{"location":"manifest-reference/#name_1","text":"A key identifier of this file or directory. Its purpose is to allow the path to change in the future. is required type: string minimum length: 1 characters Examples: \"keystore\" \"config\" \"keys\"","title":"name"},{"location":"manifest-reference/#path_1","text":"Path to the file or directory to backup. It MUST be an absolute path (do not use the ~ character) for the backup tool to work correctly. is required type: string minimum length: 1 characters Examples: \"/root/.raiden/secret/keystore\" \"/usr/src/app/config.json\"","title":"path"},{"location":"manifest-reference/#changelog","text":"Description of relevant changes of this specific version. Supports markdown and links. is optional type: string Example: \"Brief summary of the most relevant changes that the user must known before installing\"","title":"changelog"},{"location":"manifest-reference/#warnings","text":"Very relevant information that MUST be shown to the user BEFORE executing a specific action in the DAppNode Package's lifecycle. is optional type: object with the following properties: Property Type Required onInstall string Optional onUpdate string Optional onReset string Optional onRemove string Optional","title":"warnings"},{"location":"manifest-reference/#oninstall","text":"Will be shown before installing the DAppNode Package. is optional type: string Example: \"You must set the PASSWORD ENV before installing the DAppNode Package in order for the setup to work correctly.\"","title":"onInstall"},{"location":"manifest-reference/#onupdate","text":"Will be shown before updating the DAppNode Package, not in the first installation. is optional type: string Example: \"Your VPN connection will be lost when the VPN finalizes updating. Leave 1-2 minutes after executing the update and then reconnect and refresh this site.\"","title":"onUpdate"},{"location":"manifest-reference/#onreset","text":"Will be shown before resetting the DAppNode Package. is optional type: string Example: \"You MUST properly close your open channels before resetting this DAppNode Package or you may lose your funds.\"","title":"onReset"},{"location":"manifest-reference/#onremove","text":"Will be shown before removing the DAppNode Package. is optional type: string Example: \"You MUST properly close your open channels before removing this DAppNode Package or you may lose your funds.\"","title":"onRemove"},{"location":"manifest-reference/#updatealerts","text":"Alerts targeted to a specific update jump. is optional type: Array type: object[] All items must be of the type: object with the following properties: Property Type Required Default from string Required to string Optional \"*\" message string Required","title":"updateAlerts"},{"location":"manifest-reference/#from","text":"Semver range, show this message when a user updates this DAppNode Package FROM a version that satisfies this range. is required type: string minimum length: 1 characters Examples: \"0.1.x\" \"^0.2.0\"","title":"from"},{"location":"manifest-reference/#to","text":"Semver range, show this message when a user updates this DAppNode Package TO a version that satisfies this range. is optional default: \"*\" type: string minimum length: 1 characters Examples: \"0.1.x\" \"^0.2.0\" \"*\"","title":"to"},{"location":"manifest-reference/#message","text":"Alert message to be shown when from and to ranges are satisfied. is required type: string minimum length: 1 characters Example: \"Major update to OpenVPN: This update breaks compatibility with the last VPN version. Please read the migration guide: https://migration020.dappnode.io\" Specific update jump alert.","title":"message"},{"location":"manifest-reference/#disclaimer","text":"Disclaimer to be shown to the user on install, and will require the user to approve it. is optional type: object with the following properties: Property Type Required message string Required","title":"disclaimer"},{"location":"manifest-reference/#message_1","text":"The message shown in the pop-up. Markdown and links are allowed. is required type: string Example: \"This software is experimental, presented \u201cas is\u201d and inherently carries risks.\"","title":"message"},{"location":"manifest-reference/#style","text":"Graphic information to control the appearance of DAppNode Package related items in the admin UI. is optional type: object with the following properties: Property Type Required featuredBackground string Optional featuredColor string Optional featuredAvatarFilter string Optional","title":"style"},{"location":"manifest-reference/#featuredbackground","text":"CSS background property to be applied to the DAppNode Package card in the DAppNode Package store if featured. Go to the Mozilla CSS background reference for valid values. is optional type: string Examples: \"linear-gradient(to right, #323131, #395353)\" \"black\"","title":"featuredBackground"},{"location":"manifest-reference/#featuredcolor","text":"CSS color property to be applied to the DAppNode Package card in the DAppNode Package store if featured. Go to the Mozilla CSS color reference for valid values. is optional type: string Examples: \"white\" \"#fff\"","title":"featuredColor"},{"location":"manifest-reference/#featuredavatarfilter","text":"CSS filter property to be applied to <img> component (avatar) of the DAppNode Package card in the DAppNode Package store if featured. Go to the Mozilla CSS filter reference for valid values. is optional type: string Examples: \"invert(1)\" \"grayscale(80%);\"","title":"featuredAvatarFilter"},{"location":"manifest-reference/#author","text":"Main author of this DAppNode Package. Must follow the structure ${name} <${email}> (${githubUserLink}) . is optional type: string minimum length: 1 characters Example: \"DAppNode Association <admin@dappnode.io> (https://github.com/dappnode)\"","title":"author"},{"location":"manifest-reference/#contributors","text":"Contributing authors of this DAppNode Package. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Contributor author. Must follow the structure ${name} <${email}> (${githubUserLink}) . Example: [ \"Michael First <developerHanlder@project.io> (https://github.com/developerHanlder)\" , \"Michael Second <developerHanlder@project.io> (https://github.com/developerHanlder)\" ]","title":"contributors"},{"location":"manifest-reference/#categories","text":"Categories to organize and group DAppNode Packages in the DAppNode Package store. Only one or two categories maximum should be specified per package. If you feel that any of the current categories represent the nature of your package, please open an issue requesting a new category https://github.com/dappnode/dnp-manifest/issues/new is optional type: Array type: enum[] All items must be of the type: string The value of this property must be equal to one of the known values below. Value Description Developer tools Packages that their main purpose is to aid in developing, i.e. testnets Blockchain Blockchain nodes, i.e. Bitcoin, Monero Economic incentive Packages that offer an economic incentive or reward to the admin that runs it, i.e. Lightning Network Payment channels Packages whose main purpose is to manage or control payment channels, i.e. Raiden Storage Decentralized storage solutions, i.e. Swarm Communications Decentralized networking or chat solutions, i.e. Swarm Example: [ \"Developer tools\" , \"Blockchain\" ]","title":"categories"},{"location":"manifest-reference/#keywords","text":"Keywords, relevant and descriptive of this DAppNode Package. They will be shown in the admin UI DAppNode Package store. is optional type: Array type: string[] All items must be of the type: string minimum length: 1 characters Single keyword.","title":"keywords"},{"location":"manifest-reference/#links","text":"Various links (URLs) useful for the user of this package. All links will be shown in the dedicated view of this package in the admin UI. The predefined links properties below will be shown with concept related icons. Other links will be shown as well but with their plain name instead of an icon. is optional type: object with the following properties: Property Type Required homepage string Optional ui string Optional api string Optional gateway string Optional","title":"links"},{"location":"manifest-reference/#homepage","text":"Url to an informative homepage for this DAppNode Package. Should be a README or landing website. is optional type: string Example: \"https://github.com/dappnode/DNP_IPFS#readme\"","title":"homepage"},{"location":"manifest-reference/#ui","text":"Url to this DNP's DAppNode local UI. is optional type: string Example: \"http://ipfs.dappnode:5001/webui\"","title":"ui"},{"location":"manifest-reference/#api","text":"Url to this DNP's DAppNode local HTTP API endpoint. is optional type: string Example: \"http://ipfs.dappnode:5001/api/v0\"","title":"api"},{"location":"manifest-reference/#gateway","text":"Url to this DNP's DAppNode local gateway. is optional type: string Example: \"http://ipfs.dappnode:8080/ipfs\"","title":"gateway"},{"location":"manifest-reference/#repository","text":"DAppNode Package's repository. Must be a publicly available url that can be handed directly to a VCS program. is optional type: object with the following properties: Property Type Required type string Required url string Required directory string Optional","title":"repository"},{"location":"manifest-reference/#type_1","text":"is required type: string minimum length: 1 characters Example: \"git\"","title":"type"},{"location":"manifest-reference/#url","text":"is required type: string minimum length: 1 characters Example: \"https://github.com/dappnode/DNP_IPFS.git\"","title":"url"},{"location":"manifest-reference/#directory","text":"is optional type: string Example: \"packages/react-dom\"","title":"directory"},{"location":"manifest-reference/#bugs","text":"Url to your project\u2019s issue tracker. is optional type: object with the following properties: Property Type Required url string Required","title":"bugs"},{"location":"manifest-reference/#url_1","text":"is required type: string Example: \"https://github.com/dappnode/DNP_IPFS/issues\"","title":"url"},{"location":"manifest-reference/#license","text":"DAppNode Package's License. is required type: string minimum length: 1 characters Example: \"GPL-3.0\"","title":"license"},{"location":"troubleshooting/","text":"Troubleshooting VPN Connection issues The VPN is one of the pillars of the whole DAppNode functioning, you will need a somehow decent and stable internet connection to be able to connect to the server. Os & Ios Users As with OpenVPN the config file is automated you should not have any problem to access caused by the VPN configuration so possible causes might be: NAT Loopback disabled You are in the same local area network that the DAppNode you want to connect to, and your router does not support or does not have enabled NAT LOOPBACK, so there are IP conflicts that prevent you from connecting. To solve it you have to figure out if your router is doing NAT LOOPBACK and activate it if it is not the case . You can easily know it by opening the terminal and typing ping + DynDNS domain is given at the end of the installation as server address. If the ping is successful (100% packets are transmitted with no packet loss) your router is doing NAT LOOPBACK, if it is not solving you have to either enter the admin panel of your router and look for that option and activate it, or edit the server address in the VPN profile and substitute the domain given by the internal IP of the DAppNode server (usually starting with 192.168\u2026\u2026..). This will allow you to connect from the same local network but not from outside, to connect to your DAppNode from outside your network you will need to download another VPN profile pointing to the DynDNS address (exactly as it is downloaded) VPN ports closed If your router is doing NAT LOOPBACK and you can't access your DAppNode it is very likely that the ports used to establish the VPN connection with the server are not available. To solve this you have to enter the router admin UI and open the 1194 UDP (used for establishing the VPN connection and 8090 TCP (used to get the credentials from the OTP link) ports. If you have NAT LOOPBACK activated and the VPN ports are opened it is very likely that an extension you have installed or any setup you have that affects DNS routing might be interfering in the connection, please deactivate any piece of your configuration that can have influence DNS solving. If you are still experiencing problems to connect from your mac / iPhone please ping us in our channels, we will be happy to help!. Windows users The above situations are also relevant for Windows users, please check them before continuing reading. If you have NAT LOOPBACK, the ports are opened and still, you can't connect the problem is in the configuration/ VPN client. Make sure you have thoroughly followed the instructions given to set up your VPN profile step by step and that you have run the following commands that can be needed for Windows machines. Sometimes when having configured the VPN profile following the instructions the connection can not be established and you will get a \u201cThe network connection between your computer and the VPN server could not be established because the remote server is not responding\u201d To fix this error, a one-time registry change is required because the VPN server and/or client is behind NAT (e.g. home router). Run the following from an elevated command prompt. You must reboot your PC when finished. For Windows Vista, 7, 8.x and 10 REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Services\\PolicyAgent /v AssumeUDPEncapsulationContextOnSendRule /t REG_DWORD /d 0x2 /f Note that you have to run this command as elevated command prompt and then reboot your computer. For Windows XP REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Services\\RasMan\\Parameters /v ProhibitIpSec /t REG_DWORD /d 0x0 /f Linux & Android If you can't import the file in Linux Open VPN client make sure you have the network-manager-openvpn and network-manager-openvpn-gnome packages installed. you can see the whole instructions for Linux here If you are still experiencing problems to connect from your Linux device please ping us in our channels, we will be happy to help!. After the v0.2.x migration, I still get the old L2TP credentials When performing the migration from v0.1.0 after connecting via ssh or loggin in to my machine I get old L2TP credentials that can't be opened in my OpenVPN client. The new VPN package has not finished the installation and it is not running yet, so you get old credentials again. Just wait a few minutes and connect again via SSH. Once the new VPN package is running you will get your brand new OpenVPN credentials.You can check that the migration has been correctly performed and that you are getting the new OpenVPN credentials by typing in the server terminal docker ps and checking that the installed core packages have the mention 0.2.0 I can't access the credentials OTP web link to download the .ovpn file For the credentials file to be correctly donwloaded you need to have port 8090 TCP opened, please check that that port is opened. I see a message in the console saying that admin credentials expired Once a file with credentials is downloaded, and used for connecting once, the link expires after that first connection and you see that message. If for any reason you need to get new credentials, connect via ssh to the server and run the command dappnode_get dappnode_admin If you get a \"command not found\" message you can run docker exec - ti DAppNodeCore - vpn . dnp . dappnode . eth vpncli get dappnode_admin I can't connect with another device to my DAppNode Only one device can access your DAppNode for each VPN credentials created; each device connected should have its own VPN configuration adding the desired devices in the Devices tab of your admin UI. You can add as many devices as you want! Be nice and provide all your friends and family access to the decentralized web, please! My ETH node never ends up syncing If you are not on a 4 GB (ideally 8 GB) RAM configuration/ or your HD has not a high writing speed (SSD needed), it might happen that the server is not able to catch up with Ethereum Blocks, so it never gets synced. We are sorry but the server might not be able to cope up with the chain. Using Parity, it is also possible that the initial sync gets stuck at a given snapshot of the first sync, if this happens try removing ETHCHAIN volume and let the sync start again. To do so you have to enter in Packages/System packages / Ethchain / Controls and hit remove volume, the existing synced snapshots will be erased and the sync will start again. When using Parity, it might happen that when the snapshots finish syncin you are still very far away the current block height so it will take ages to finish the sync block by block. You can try to set up the Parity flag --warp-barrier (current block height -30.000 blocks) so the sync takes a higher number of snapshots what will decrease the number of spare blocks left to be synced individually. Have a look at this example. I can't access the ADMIN UI You have to be connected to the VPN to access the ADMIN UI, in case you are connected and still not able to access just disconnect the VPN and connect it again. I can't install packages or it takes a lot of time to install them For installing packages the ETH node should be synchronized. In case the node is sync and you are experiencing this, enter in System and restart IPFS and VPN and connect again. Ports that need to be opened Please find in this table the ports that need to be opened for the smooth functioning of your DAppNode and installed packages. Service TCP UDP VPN (OpenVPN) 8090 1194 Ethereum Node 30303 30303 IPFS 4001 4002 However, if your router supports UPnP, do not worry about this, it will manage all the ports stuff for you. Info Note that SSH port (22) is only needed when you need ssh access to your server, and it's not a very good idea to let that port opened , consider restricting the access to your own IP or just open it when you need it and then close it I need to restore the system without losing any data Execute this command in your DAppNode terminal, this will update the core packages to the latest versions without erasing any data from your volumes. sudo wget -O - https://github.com/dappnode/DAppNode/releases/download/v0.1.21/dappnode_install.sh | sudo UPDATE=true bash I can't install a package using its ENS or IPFS hash If the package has been uploaded to IPFS but it still does not have enough propagation in the network,it might be hard to install that package unless you are connected to an IPFS node that that allows direct or routed access to that package. As you can automatically peer-connect two IPFS nodes hosted in a DAppNode you can ask a DAppNode peer that already has installed hat package to connect your nodes. To do so, in the IPFS packages screen Go to Connect with peers and send the link to your peer. I need to uninstall my DAppNode If for whichever strange reason you have to uninstall your DAppNode server you can do so by typing the following command in the DAppNode server console wget -qO - https://uninstaller.dappnode.io | sudo bash This command will uninstall DAppNode components (but not docker et al.): \u26a0\ufe0f BEWARE! It will also delete all volumes and stored data!\u26a0\ufe0f","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"troubleshooting/#vpn-connection-issues","text":"The VPN is one of the pillars of the whole DAppNode functioning, you will need a somehow decent and stable internet connection to be able to connect to the server.","title":"VPN Connection issues"},{"location":"troubleshooting/#os-ios-users","text":"As with OpenVPN the config file is automated you should not have any problem to access caused by the VPN configuration so possible causes might be:","title":"Os &amp; Ios Users"},{"location":"troubleshooting/#nat-loopback-disabled","text":"You are in the same local area network that the DAppNode you want to connect to, and your router does not support or does not have enabled NAT LOOPBACK, so there are IP conflicts that prevent you from connecting. To solve it you have to figure out if your router is doing NAT LOOPBACK and activate it if it is not the case . You can easily know it by opening the terminal and typing ping + DynDNS domain is given at the end of the installation as server address. If the ping is successful (100% packets are transmitted with no packet loss) your router is doing NAT LOOPBACK, if it is not solving you have to either enter the admin panel of your router and look for that option and activate it, or edit the server address in the VPN profile and substitute the domain given by the internal IP of the DAppNode server (usually starting with 192.168\u2026\u2026..). This will allow you to connect from the same local network but not from outside, to connect to your DAppNode from outside your network you will need to download another VPN profile pointing to the DynDNS address (exactly as it is downloaded)","title":"NAT Loopback disabled"},{"location":"troubleshooting/#vpn-ports-closed","text":"If your router is doing NAT LOOPBACK and you can't access your DAppNode it is very likely that the ports used to establish the VPN connection with the server are not available. To solve this you have to enter the router admin UI and open the 1194 UDP (used for establishing the VPN connection and 8090 TCP (used to get the credentials from the OTP link) ports. If you have NAT LOOPBACK activated and the VPN ports are opened it is very likely that an extension you have installed or any setup you have that affects DNS routing might be interfering in the connection, please deactivate any piece of your configuration that can have influence DNS solving. If you are still experiencing problems to connect from your mac / iPhone please ping us in our channels, we will be happy to help!.","title":"VPN ports closed"},{"location":"troubleshooting/#windows-users","text":"The above situations are also relevant for Windows users, please check them before continuing reading. If you have NAT LOOPBACK, the ports are opened and still, you can't connect the problem is in the configuration/ VPN client. Make sure you have thoroughly followed the instructions given to set up your VPN profile step by step and that you have run the following commands that can be needed for Windows machines. Sometimes when having configured the VPN profile following the instructions the connection can not be established and you will get a \u201cThe network connection between your computer and the VPN server could not be established because the remote server is not responding\u201d To fix this error, a one-time registry change is required because the VPN server and/or client is behind NAT (e.g. home router). Run the following from an elevated command prompt. You must reboot your PC when finished.","title":"Windows users"},{"location":"troubleshooting/#for-windows-vista-7-8x-and-10","text":"REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Services\\PolicyAgent /v AssumeUDPEncapsulationContextOnSendRule /t REG_DWORD /d 0x2 /f Note that you have to run this command as elevated command prompt and then reboot your computer.","title":"For Windows Vista, 7, 8.x and 10"},{"location":"troubleshooting/#for-windows-xp","text":"REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Services\\RasMan\\Parameters /v ProhibitIpSec /t REG_DWORD /d 0x0 /f","title":"For Windows XP"},{"location":"troubleshooting/#linux-android","text":"If you can't import the file in Linux Open VPN client make sure you have the network-manager-openvpn and network-manager-openvpn-gnome packages installed. you can see the whole instructions for Linux here If you are still experiencing problems to connect from your Linux device please ping us in our channels, we will be happy to help!.","title":"Linux &amp; Android"},{"location":"troubleshooting/#after-the-v02x-migration-i-still-get-the-old-l2tp-credentials","text":"When performing the migration from v0.1.0 after connecting via ssh or loggin in to my machine I get old L2TP credentials that can't be opened in my OpenVPN client. The new VPN package has not finished the installation and it is not running yet, so you get old credentials again. Just wait a few minutes and connect again via SSH. Once the new VPN package is running you will get your brand new OpenVPN credentials.You can check that the migration has been correctly performed and that you are getting the new OpenVPN credentials by typing in the server terminal docker ps and checking that the installed core packages have the mention 0.2.0","title":"After the v0.2.x migration, I still get the old L2TP credentials"},{"location":"troubleshooting/#i-cant-access-the-credentials-otp-web-link-to-download-the-ovpn-file","text":"For the credentials file to be correctly donwloaded you need to have port 8090 TCP opened, please check that that port is opened.","title":"I can't access the credentials OTP web link to download the .ovpn file"},{"location":"troubleshooting/#i-see-a-message-in-the-console-saying-that-admin-credentials-expired","text":"Once a file with credentials is downloaded, and used for connecting once, the link expires after that first connection and you see that message. If for any reason you need to get new credentials, connect via ssh to the server and run the command dappnode_get dappnode_admin If you get a \"command not found\" message you can run docker exec - ti DAppNodeCore - vpn . dnp . dappnode . eth vpncli get dappnode_admin","title":"I see a message in the console saying that admin credentials expired"},{"location":"troubleshooting/#i-cant-connect-with-another-device-to-my-dappnode","text":"Only one device can access your DAppNode for each VPN credentials created; each device connected should have its own VPN configuration adding the desired devices in the Devices tab of your admin UI. You can add as many devices as you want! Be nice and provide all your friends and family access to the decentralized web, please!","title":"I can't connect with another device to my DAppNode"},{"location":"troubleshooting/#my-eth-node-never-ends-up-syncing","text":"If you are not on a 4 GB (ideally 8 GB) RAM configuration/ or your HD has not a high writing speed (SSD needed), it might happen that the server is not able to catch up with Ethereum Blocks, so it never gets synced. We are sorry but the server might not be able to cope up with the chain. Using Parity, it is also possible that the initial sync gets stuck at a given snapshot of the first sync, if this happens try removing ETHCHAIN volume and let the sync start again. To do so you have to enter in Packages/System packages / Ethchain / Controls and hit remove volume, the existing synced snapshots will be erased and the sync will start again. When using Parity, it might happen that when the snapshots finish syncin you are still very far away the current block height so it will take ages to finish the sync block by block. You can try to set up the Parity flag --warp-barrier (current block height -30.000 blocks) so the sync takes a higher number of snapshots what will decrease the number of spare blocks left to be synced individually. Have a look at this example.","title":"My ETH node never ends up syncing"},{"location":"troubleshooting/#i-cant-access-the-admin-ui","text":"You have to be connected to the VPN to access the ADMIN UI, in case you are connected and still not able to access just disconnect the VPN and connect it again.","title":"I can't access the ADMIN UI"},{"location":"troubleshooting/#i-cant-install-packages-or-it-takes-a-lot-of-time-to-install-them","text":"For installing packages the ETH node should be synchronized. In case the node is sync and you are experiencing this, enter in System and restart IPFS and VPN and connect again.","title":"I can't install packages or it takes a lot of time to install them"},{"location":"troubleshooting/#ports-that-need-to-be-opened","text":"Please find in this table the ports that need to be opened for the smooth functioning of your DAppNode and installed packages. Service TCP UDP VPN (OpenVPN) 8090 1194 Ethereum Node 30303 30303 IPFS 4001 4002 However, if your router supports UPnP, do not worry about this, it will manage all the ports stuff for you. Info Note that SSH port (22) is only needed when you need ssh access to your server, and it's not a very good idea to let that port opened , consider restricting the access to your own IP or just open it when you need it and then close it","title":"Ports that need to be opened"},{"location":"troubleshooting/#i-need-to-restore-the-system-without-losing-any-data","text":"Execute this command in your DAppNode terminal, this will update the core packages to the latest versions without erasing any data from your volumes. sudo wget -O - https://github.com/dappnode/DAppNode/releases/download/v0.1.21/dappnode_install.sh | sudo UPDATE=true bash","title":"I need to restore the system without losing any data"},{"location":"troubleshooting/#i-cant-install-a-package-using-its-ens-or-ipfs-hash","text":"If the package has been uploaded to IPFS but it still does not have enough propagation in the network,it might be hard to install that package unless you are connected to an IPFS node that that allows direct or routed access to that package. As you can automatically peer-connect two IPFS nodes hosted in a DAppNode you can ask a DAppNode peer that already has installed hat package to connect your nodes. To do so, in the IPFS packages screen Go to Connect with peers and send the link to your peer.","title":"I can't install a package using its ENS or IPFS hash"},{"location":"troubleshooting/#i-need-to-uninstall-my-dappnode","text":"If for whichever strange reason you have to uninstall your DAppNode server you can do so by typing the following command in the DAppNode server console wget -qO - https://uninstaller.dappnode.io | sudo bash This command will uninstall DAppNode components (but not docker et al.): \u26a0\ufe0f BEWARE! It will also delete all volumes and stored data!\u26a0\ufe0f","title":"I need to uninstall my DAppNode"},{"location":"user-guide/","text":"User Guide Welcome to DAppNode \u2013 The Admin UI Once you have succeeded in connecting to your DAppNode via VPN, you will have access to http://my.admin.dnp.dappnode.eth . Be aware of this historic moment; it might very likely be the first ETH domain you visit. And remember that from DAppNode 0.2.0 you can also access by typing http://my.dappnode as easy as that. The Admin UI allows the installation of packages in your DAppNode, adding devices to connect for your friends and family, monitoring its health and allowing fully functional operation without having to open the console. Let\u2019s have a look to see what you will find here. Dashboard When you first enter the Admin UI, you will see a link to a survey made to tell us how the installation went and provide your insights about the process. We greatly appreciate this feedback in order to help us to make a better product. By clicking \u201cDashboard\u201d you can have a fast look to your server state, if you want to check the overall status and functioning click on the report button at the top right corner. Tabs area Name of the server / IP / DynDNS Sync State Server Stats Size of ETHCHAIN and IPFS volumes Fast access to sync state Notifications area Autodiagnose tool / Report Issue Info IMPORTANT NOTE ON SERVER STATS: if you note that the disk capacity is getting near to 100 % you should disable services to avoid the disk getting full. If this happens the DAppNode will get unfunctional, and you will not be able to erase packages once the memory is at 100% To avoid this, non core packages will be automatically stopped when there is less than 5 Gbs left, and ETHCHAIN and IPFS will be automatically stopped when there is less than 1 GB available. If by any chance your DAppNode server gets to 100 % busy disk space, it will become unworkable from the ADMIN UI and you will have to erase containers/volumes manually from the commmand line of your server. Devices This tab is one of the cornerstones of our vision, as the functionality is meant to build trusted circles that connect to the decentralized web through a DAppNode installed on a piece of self-owned hardware that provides access to your friends and family. Remember that they should have a compatible OpenVPN client installed in their device. Just click \u201cadd a device\u201d, name it and you will get a QR / link that contains the file to configure the VPN to connect to your DAppNode for any friend or family member. This is the same process that you performed while installing your DAppNode when you accessed the first URL that the DAppNode sent you to. In fact, the DAppNode created the first device for you, now it is your turn\u2026 Take into account that each device added has its own VPN credentials and is valid only for one concurrent connection, but you can add as many devices as you want. If there is a device using the same VPN credentials, you will be able to connect to the VPN with other devices, but you won't be able to access the DAppNode. You also have the ability to give a device admin privileges so the ADMIN UI can be used by them. If any device without admin credentials tries to access the ADMIN UI, it will not work. Info Take in account that if you remove admin privileges to any device while that device is connected to the server, it will still be able to access the admin UI and thus that device can make itself admin again, to prevent this, after removing admin privileges to any user you should restart the VPN package by going to System / VPN / Restart. This also applies when you want to remove access to any device without admin privileges. Installer Here you have the DAppstore where you can directly install a growing amount of services and libraries just by a click and they will install. In the installer you can find two kind of packages: DAppNode Association Verified Packages These packages have been built and uploaded to DAppNode by the DAppNode association and are maintained by DAppNode, you will find a blue ticker in the DAppNode Association Verified packages. Non verified packages Packages without the blue ticker have been developed and uploaded by third parties. DAppNode association is not maintaining these package and has not performed any audit on its content. Use them at your own risk. DAppNode will not be liable for any loss or damage produced by the use of any package within the installer. Please let us know which ones would you like to have in the DAppstore by filling out this little survey. https://goo.gl/forms/EjVTHu6UBWBk60Z62 From the installer you can also install packages not shown in the interface by pasting its IPFS hash or its ENS domain in the above bar. The interface will show you the corresponding package to that IPFS hash/ETH domain and you will be able to install it if there are no compatibility issues. (see below section Have your own packages in DAppNode) We have added a functionality that allows to customize some packages with predefined configurations made by the developer of the node/ DApp, please check the project documentation to see which options to customize are available. You can also select your own customized path for the installation of the package by writing your selected path in the field aside the path by default. Last, if you are an advanced user you can also chooose the ports to be used by the package by editing the \"ports\" section and upload and download files to any package using the File Manager. Here you have a brief description of some of the available packages: Testnet nodes With DAppNode, you can easily set up nodes of the Rinkeby, Kovan and Ropsten networks for testing purposes. Just find in Packages the testnet you want to set up in your DAppNode, install it and it will immediately start to synchronize. As with Parity Main net node, you have your websocket in the port 8546 and your RPC connection in the port 8545 using the following URLs: my.rinkeby.dnp.dappnode.eth my.kovan.dnp.dappnode.eth my.ropsten.dnp.dappnode.eth G\u00f6rli G\u00f6rli, the only Proof of Authority testnet that has compatibility with Geth, Pantheon and Parity is available for you to run with a couple of clicks in your DAppNode. Vipnode Vipnode is an open source implementation of economic incentives for running Ethereum full nodes who serve light clients\u200a\u2014\u200aa critical component of ETH2.0 sharding. Vipnode is meant to be an incentive structure that allows nodlers\u200a\u2014\u200ausing DAppNode or any other full node\u200a\u2014\u200ato be paid for running these nodes. At the moment the payments are made in Rinkeby ETH but soon it will be real ether. Swarm Swarm is a distributed storage platform and content distribution service, a native base layer service of the ethereum web3 stack that we have made available as a DAppNode package so you can easily install and maintain your own Swarm node. Raiden Raiden Network is a second layer scaling solution for near instant paymnents on top of the Ethereum Network. Mainet and testnet packages are available in DAppode installer so you can run a Raiden node in the blink of an eye. Monero DAppNode has a Monero daemon package available that will be your very own Monero node, as using Monero without your own node is a bit like having your DAppNode in AWS (defeats the purpose). Let\u2019s see how to connect a Monero wallet to your node. Once you have installed the Monero daemon, with a couple of clicks you are ready to set up your wallet connected to your node. In Monero a node is called a daemon, and does not have a wallet functionality. They are two separate pieces of software that work together by connecting your Graphic User Interface, or command line wallet to your own node. For this example, we will use the official Monero GUI that you can get at www.getmonero.org Select the GUI wallet version for your OS. Install it and open it. After showing you your keys and so on, the app will ask you which node you want to connect to.Simply select remote node, include http://my.monero.dnp.dappnode.eth as the node address, 18081 as the port and you are done! Now you have your Monero wallet connected to your own node! Do not buy any tanks please ;)... Packages This screen shows you the system packages and your installed packages in two tabs in a submenu, from where you can manag the operation of a package My Packages Here you can see the packages you have installed and see their info, manage them, access to their logs, configure them, and upload and download files to and from a package Info In this screen you will find the relevant info about the package: Version of the package Use link Volumes and space occupied (remember you can only choose a customised path in the installation) Info links Ports used (remember you can change them, in the instalalation or after it) Control These are the main options you can execute on your installed packages: Note that when removing a non core package you have the following options : Remove only the container: This will only remove the package but data will be kept, so if you insatll the package again in the same path,the container will mount the volume again and you won't have to sync the whole package again. Remove Package + volume : This will erase the container and the associated data. If you want to reinstall, the volume will have to sync again Config In this screen you can set up the different existing options and configs for each package. Ports With this feature you can add customised port mappings to specific packages, select the host port and the container port and hit \"Update port mappings\" . Please do not change these settings unless you really know what you are doing, be cautious out there. Logs This tab will show you the package logs in real time. Backup and restore Some DAppNode packages as Lightning Network and Raiden contain private keys so we have added a simple way to backup and restore the sensitive info stored in your DAppNode,as usual,with a couple of clicks. In the packages that hold private keys in their volumes you will find a backup tab. Let us see how it works looking at the Lightning Network Package. Backup Hit the \"Backup now\" button and select where do you want to keep your backup file safe. A tar.xz file will be downloaded to the selected path. Restore If anything happens with your LN node and you have your backup you can always restore it from the ADMIN UI. Just go to Packages / My Packages and select the LN package and the backup tab. Aside the backup button you will see a \"Restore\" button. Just hit that sweet restore button, select your tar.xz backup file and confirm. After the backup file is uploaded your LN node is restored. File Manager This option will allow you to upload and download files from a package container. For example you will use it to upload a keystore file to Raiden package, and to restore or to do a backup from your account. System Packages Here you can access the packages that are part of the DAppNode core and manage them, see their logs, restart them or delete its associated data to be restored, with the same navigation structure as the installed packages System This area is used to configure and manage your system with different options that will be progressively released. Auto-updates You can now choose if you want your packages to be automatically updated by enabling these option for System Packages, installed packages, or both. Please note that tthe updates will be made 24 hours after the updated package availability is detected. This feature is valid for non major updates, in which an admin intervention will always be needed. Static IP If you have a Static IP you can set it up here so the future VPN credentials generated point to that fixed ip, just include your Static IP in the box and hit \u201cSet\u201d, you can always disable it. Power Management If you need to reboot or shut down your server as a last resource, you can do it from this section. Please be aware that if you shut down your server you will only be able to switch it on again when you have psysical access to your DAppNode. SDK Together with DAppNode\u00b4s SDK, this tab will help you to make the metamask transaction to publish your own package. Once you have used the command line SDK and you have the DNP name, the version about to be published and the IPFS hash of the manifest, you can use this tool to make the last step and send the transaction once you have connected your metamask by clicking the \"Connect\" button Support Autodiagnose In this screen you will have an overview of the functioning of your DAppNode with checks that will indicate you if there is any problem for the normal operation of your DAppNode. You can contribute to DAppNode\u00b4s improvement by opening issues directly from the ADMIN UI. Report When you click the \"Report\" tab you will chave the option of sending the issue with a prepopulated form that will be automatically loaded in the report screen. You can also choose to open the issue without any data. Activity This tab allows easy access to the DAppNode logs in order to debug errors. We work hard to make this tab irrelevant to you, but for the time being, if you are experiencing any issue, these logs will help our support team help you identify and fix any problem. You will also find a button to download a log report file. Notifications In the upper right part of the ADMIN UI you will see a bell icon that will be highlighted when there is an important notification for you. It will turn yellow to warn you about the need of creating new VPN credentials when you set a Static IP, or prompt you to restart the VPN services when you want to remove access to users in your DAppNode. It will turn red when packages have been stopped to prevent the machine disk getting full.","title":"User Guide"},{"location":"user-guide/#user-guide","text":"","title":"User Guide"},{"location":"user-guide/#welcome-to-dappnode-the-admin-ui","text":"Once you have succeeded in connecting to your DAppNode via VPN, you will have access to http://my.admin.dnp.dappnode.eth . Be aware of this historic moment; it might very likely be the first ETH domain you visit. And remember that from DAppNode 0.2.0 you can also access by typing http://my.dappnode as easy as that. The Admin UI allows the installation of packages in your DAppNode, adding devices to connect for your friends and family, monitoring its health and allowing fully functional operation without having to open the console. Let\u2019s have a look to see what you will find here.","title":"Welcome to DAppNode \u2013 The Admin UI"},{"location":"user-guide/#dashboard","text":"When you first enter the Admin UI, you will see a link to a survey made to tell us how the installation went and provide your insights about the process. We greatly appreciate this feedback in order to help us to make a better product. By clicking \u201cDashboard\u201d you can have a fast look to your server state, if you want to check the overall status and functioning click on the report button at the top right corner. Tabs area Name of the server / IP / DynDNS Sync State Server Stats Size of ETHCHAIN and IPFS volumes Fast access to sync state Notifications area Autodiagnose tool / Report Issue Info IMPORTANT NOTE ON SERVER STATS: if you note that the disk capacity is getting near to 100 % you should disable services to avoid the disk getting full. If this happens the DAppNode will get unfunctional, and you will not be able to erase packages once the memory is at 100% To avoid this, non core packages will be automatically stopped when there is less than 5 Gbs left, and ETHCHAIN and IPFS will be automatically stopped when there is less than 1 GB available. If by any chance your DAppNode server gets to 100 % busy disk space, it will become unworkable from the ADMIN UI and you will have to erase containers/volumes manually from the commmand line of your server.","title":"Dashboard"},{"location":"user-guide/#devices","text":"This tab is one of the cornerstones of our vision, as the functionality is meant to build trusted circles that connect to the decentralized web through a DAppNode installed on a piece of self-owned hardware that provides access to your friends and family. Remember that they should have a compatible OpenVPN client installed in their device. Just click \u201cadd a device\u201d, name it and you will get a QR / link that contains the file to configure the VPN to connect to your DAppNode for any friend or family member. This is the same process that you performed while installing your DAppNode when you accessed the first URL that the DAppNode sent you to. In fact, the DAppNode created the first device for you, now it is your turn\u2026 Take into account that each device added has its own VPN credentials and is valid only for one concurrent connection, but you can add as many devices as you want. If there is a device using the same VPN credentials, you will be able to connect to the VPN with other devices, but you won't be able to access the DAppNode. You also have the ability to give a device admin privileges so the ADMIN UI can be used by them. If any device without admin credentials tries to access the ADMIN UI, it will not work. Info Take in account that if you remove admin privileges to any device while that device is connected to the server, it will still be able to access the admin UI and thus that device can make itself admin again, to prevent this, after removing admin privileges to any user you should restart the VPN package by going to System / VPN / Restart. This also applies when you want to remove access to any device without admin privileges.","title":"Devices"},{"location":"user-guide/#installer","text":"Here you have the DAppstore where you can directly install a growing amount of services and libraries just by a click and they will install. In the installer you can find two kind of packages:","title":"Installer"},{"location":"user-guide/#dappnode-association-verified-packages","text":"These packages have been built and uploaded to DAppNode by the DAppNode association and are maintained by DAppNode, you will find a blue ticker in the DAppNode Association Verified packages.","title":"DAppNode Association Verified Packages"},{"location":"user-guide/#non-verified-packages","text":"Packages without the blue ticker have been developed and uploaded by third parties. DAppNode association is not maintaining these package and has not performed any audit on its content. Use them at your own risk. DAppNode will not be liable for any loss or damage produced by the use of any package within the installer. Please let us know which ones would you like to have in the DAppstore by filling out this little survey. https://goo.gl/forms/EjVTHu6UBWBk60Z62 From the installer you can also install packages not shown in the interface by pasting its IPFS hash or its ENS domain in the above bar. The interface will show you the corresponding package to that IPFS hash/ETH domain and you will be able to install it if there are no compatibility issues. (see below section Have your own packages in DAppNode) We have added a functionality that allows to customize some packages with predefined configurations made by the developer of the node/ DApp, please check the project documentation to see which options to customize are available. You can also select your own customized path for the installation of the package by writing your selected path in the field aside the path by default. Last, if you are an advanced user you can also chooose the ports to be used by the package by editing the \"ports\" section and upload and download files to any package using the File Manager. Here you have a brief description of some of the available packages:","title":"Non verified packages"},{"location":"user-guide/#testnet-nodes","text":"With DAppNode, you can easily set up nodes of the Rinkeby, Kovan and Ropsten networks for testing purposes. Just find in Packages the testnet you want to set up in your DAppNode, install it and it will immediately start to synchronize. As with Parity Main net node, you have your websocket in the port 8546 and your RPC connection in the port 8545 using the following URLs: my.rinkeby.dnp.dappnode.eth my.kovan.dnp.dappnode.eth my.ropsten.dnp.dappnode.eth","title":"Testnet nodes"},{"location":"user-guide/#gorli","text":"G\u00f6rli, the only Proof of Authority testnet that has compatibility with Geth, Pantheon and Parity is available for you to run with a couple of clicks in your DAppNode.","title":"G\u00f6rli"},{"location":"user-guide/#vipnode","text":"Vipnode is an open source implementation of economic incentives for running Ethereum full nodes who serve light clients\u200a\u2014\u200aa critical component of ETH2.0 sharding. Vipnode is meant to be an incentive structure that allows nodlers\u200a\u2014\u200ausing DAppNode or any other full node\u200a\u2014\u200ato be paid for running these nodes. At the moment the payments are made in Rinkeby ETH but soon it will be real ether.","title":"Vipnode"},{"location":"user-guide/#swarm","text":"Swarm is a distributed storage platform and content distribution service, a native base layer service of the ethereum web3 stack that we have made available as a DAppNode package so you can easily install and maintain your own Swarm node.","title":"Swarm"},{"location":"user-guide/#raiden","text":"Raiden Network is a second layer scaling solution for near instant paymnents on top of the Ethereum Network. Mainet and testnet packages are available in DAppode installer so you can run a Raiden node in the blink of an eye.","title":"Raiden"},{"location":"user-guide/#monero","text":"DAppNode has a Monero daemon package available that will be your very own Monero node, as using Monero without your own node is a bit like having your DAppNode in AWS (defeats the purpose). Let\u2019s see how to connect a Monero wallet to your node. Once you have installed the Monero daemon, with a couple of clicks you are ready to set up your wallet connected to your node. In Monero a node is called a daemon, and does not have a wallet functionality. They are two separate pieces of software that work together by connecting your Graphic User Interface, or command line wallet to your own node. For this example, we will use the official Monero GUI that you can get at www.getmonero.org Select the GUI wallet version for your OS. Install it and open it. After showing you your keys and so on, the app will ask you which node you want to connect to.Simply select remote node, include http://my.monero.dnp.dappnode.eth as the node address, 18081 as the port and you are done! Now you have your Monero wallet connected to your own node! Do not buy any tanks please ;)...","title":"Monero"},{"location":"user-guide/#packages","text":"This screen shows you the system packages and your installed packages in two tabs in a submenu, from where you can manag the operation of a package","title":"Packages"},{"location":"user-guide/#my-packages","text":"Here you can see the packages you have installed and see their info, manage them, access to their logs, configure them, and upload and download files to and from a package","title":"My Packages"},{"location":"user-guide/#info","text":"In this screen you will find the relevant info about the package: Version of the package Use link Volumes and space occupied (remember you can only choose a customised path in the installation) Info links Ports used (remember you can change them, in the instalalation or after it)","title":"Info"},{"location":"user-guide/#control","text":"These are the main options you can execute on your installed packages: Note that when removing a non core package you have the following options : Remove only the container: This will only remove the package but data will be kept, so if you insatll the package again in the same path,the container will mount the volume again and you won't have to sync the whole package again. Remove Package + volume : This will erase the container and the associated data. If you want to reinstall, the volume will have to sync again","title":"Control"},{"location":"user-guide/#config","text":"In this screen you can set up the different existing options and configs for each package.","title":"Config"},{"location":"user-guide/#ports","text":"With this feature you can add customised port mappings to specific packages, select the host port and the container port and hit \"Update port mappings\" . Please do not change these settings unless you really know what you are doing, be cautious out there.","title":"Ports"},{"location":"user-guide/#logs","text":"This tab will show you the package logs in real time.","title":"Logs"},{"location":"user-guide/#backup-and-restore","text":"Some DAppNode packages as Lightning Network and Raiden contain private keys so we have added a simple way to backup and restore the sensitive info stored in your DAppNode,as usual,with a couple of clicks. In the packages that hold private keys in their volumes you will find a backup tab. Let us see how it works looking at the Lightning Network Package.","title":"Backup and restore"},{"location":"user-guide/#backup","text":"Hit the \"Backup now\" button and select where do you want to keep your backup file safe. A tar.xz file will be downloaded to the selected path.","title":"Backup"},{"location":"user-guide/#restore","text":"If anything happens with your LN node and you have your backup you can always restore it from the ADMIN UI. Just go to Packages / My Packages and select the LN package and the backup tab. Aside the backup button you will see a \"Restore\" button. Just hit that sweet restore button, select your tar.xz backup file and confirm. After the backup file is uploaded your LN node is restored.","title":"Restore"},{"location":"user-guide/#file-manager","text":"This option will allow you to upload and download files from a package container. For example you will use it to upload a keystore file to Raiden package, and to restore or to do a backup from your account.","title":"File Manager"},{"location":"user-guide/#system-packages","text":"Here you can access the packages that are part of the DAppNode core and manage them, see their logs, restart them or delete its associated data to be restored, with the same navigation structure as the installed packages","title":"System Packages"},{"location":"user-guide/#system","text":"This area is used to configure and manage your system with different options that will be progressively released.","title":"System"},{"location":"user-guide/#auto-updates","text":"You can now choose if you want your packages to be automatically updated by enabling these option for System Packages, installed packages, or both. Please note that tthe updates will be made 24 hours after the updated package availability is detected. This feature is valid for non major updates, in which an admin intervention will always be needed.","title":"Auto-updates"},{"location":"user-guide/#static-ip","text":"If you have a Static IP you can set it up here so the future VPN credentials generated point to that fixed ip, just include your Static IP in the box and hit \u201cSet\u201d, you can always disable it.","title":"Static IP"},{"location":"user-guide/#power-management","text":"If you need to reboot or shut down your server as a last resource, you can do it from this section. Please be aware that if you shut down your server you will only be able to switch it on again when you have psysical access to your DAppNode.","title":"Power Management"},{"location":"user-guide/#sdk","text":"Together with DAppNode\u00b4s SDK, this tab will help you to make the metamask transaction to publish your own package. Once you have used the command line SDK and you have the DNP name, the version about to be published and the IPFS hash of the manifest, you can use this tool to make the last step and send the transaction once you have connected your metamask by clicking the \"Connect\" button","title":"SDK"},{"location":"user-guide/#support","text":"","title":"Support"},{"location":"user-guide/#autodiagnose","text":"In this screen you will have an overview of the functioning of your DAppNode with checks that will indicate you if there is any problem for the normal operation of your DAppNode. You can contribute to DAppNode\u00b4s improvement by opening issues directly from the ADMIN UI.","title":"Autodiagnose"},{"location":"user-guide/#report","text":"When you click the \"Report\" tab you will chave the option of sending the issue with a prepopulated form that will be automatically loaded in the report screen. You can also choose to open the issue without any data.","title":"Report"},{"location":"user-guide/#activity","text":"This tab allows easy access to the DAppNode logs in order to debug errors. We work hard to make this tab irrelevant to you, but for the time being, if you are experiencing any issue, these logs will help our support team help you identify and fix any problem. You will also find a button to download a log report file.","title":"Activity"},{"location":"user-guide/#notifications","text":"In the upper right part of the ADMIN UI you will see a bell icon that will be highlighted when there is an important notification for you. It will turn yellow to warn you about the need of creating new VPN credentials when you set a Static IP, or prompt you to restart the VPN services when you want to remove access to users in your DAppNode. It will turn red when packages have been stopped to prevent the machine disk getting full.","title":"Notifications"},{"location":"versions/","text":"Last Update This guide was last updated on 2nd September 2019 Versions covered These are the core packages versions covered by this guide. ETHCHAIN: ethchain.dnp.dappnode.eth: 0.2.7 VPN: vpn.dnp.dappnode.eth: 0.2.1, commit: 06e0ccf9 DAPPMANAGER: dappmanager.dnp.dappnode.eth: 0.2.8, branch: v0.2.8, commit: 6a62fda0 ADMIN : admin.dnp.dappnode.eth: 0.2.7, branch: v0.2.6, commit: 6a288469 IPFS: ipfs.dnp.dappnode.eth: 0.2.4 CORE: core.dnp.dappnode.eth: 0.2.10 ETHFORWARD: ethforward.dnp.dappnode.eth: 0.2.2 WAMP: wamp.dnp.dappnode.eth: 0.2.0 WIFI: wifi.dnp.dappnode.eth: 0.2.0 BIND: bind.dnp.dappnode.eth: 0.2.0","title":"Versions covered"},{"location":"versions/#last-update","text":"This guide was last updated on 2nd September 2019","title":"Last Update"},{"location":"versions/#versions-covered","text":"These are the core packages versions covered by this guide. ETHCHAIN: ethchain.dnp.dappnode.eth: 0.2.7 VPN: vpn.dnp.dappnode.eth: 0.2.1, commit: 06e0ccf9 DAPPMANAGER: dappmanager.dnp.dappnode.eth: 0.2.8, branch: v0.2.8, commit: 6a62fda0 ADMIN : admin.dnp.dappnode.eth: 0.2.7, branch: v0.2.6, commit: 6a288469 IPFS: ipfs.dnp.dappnode.eth: 0.2.4 CORE: core.dnp.dappnode.eth: 0.2.10 ETHFORWARD: ethforward.dnp.dappnode.eth: 0.2.2 WAMP: wamp.dnp.dappnode.eth: 0.2.0 WIFI: wifi.dnp.dappnode.eth: 0.2.0 BIND: bind.dnp.dappnode.eth: 0.2.0","title":"Versions covered"},{"location":"what-can-you-do/","text":"What can you do with your DAppNode? Enter https://my.admin.dnp.dappnode.eth to access DAppNode's admin interface. From DAppNode 0.2.0 you can also just type http://my.dappnode . Did we ever say that we wanted to make everything so easy...? Bear in mind that DAppNode's functionality will be limited until the Ethereum mainnet chain is synced (should take around 6~8 hours to get a warp sync). Now you can do things like for example: Navigate to a decentralized web decentral.eth Decentralized version of Mycrypto Decentralized version of ENS Manager Decentralized version of Wallet Gnosis Decentralized version of Oasis Direct and Eth2Dai Go to IPFS by entering http://ipfs.dappnode:5001/webui into your browser. You have a websocket of your parity node in ws://my.ethchain.dnp.dappnode.eth:8546 or ws://fullnode.dappnode:8546 and you can use http://fullnode.dappnode:8545 as a custom RPC to connect to metamask i.e. Info We have updated our IPFS package (v.0.1.4), and one of the features is to provide a more complete and user friendly web interface. The first time you access to it will ask you for your \u201cCustom API address\u201d, just fill the field with this address and you will be connected to your IPFS node , this is the input you have to enter in the field seen in the image below. / ip4 / 172 . 33 . 1 . 5 / tcp / 5001 VPN connection Now you have your own VPN service to privately connect to your DAppNode and also to provide access for your family and friends to connect to your installed nodes and to ETH domains through your DAppNode. Ethereum client After a few hours of installing DAppNode you will have your own Ethereum fullnode running in your DAppNode. You have available your node websocket in ws://my.ethchain.dnp.dappnode.eth:8546 or ws//fullnode.dappnode:8546 and RPC connection through http://my.ethchain.dnp.dappnode.eth:8545 or http://fullnode.dappnode:8545 From version 0.2.7 Ethchain package allows the user to select the Ethereum client he wants to use as default of his DAppNode. The available clients are Parity, which is the default until version 0.2.7, and Geth, which is the client with which your full node will sync by default since v0.2.7. You can easily switch between them in the ethchain package screen, but please note that volumes where the chains are stored are different, so first time you switch from one to another the chain will have to sync. To switch the client just go to \u201c Packages / System Packages / Ethchain / Choose client\u201d and select your preferred option When you switch clients you can choose between removing the chain volume of the client you are moving from, or keep it so you can easily switch back again without the need of syncing the whole chain again. You can still set parameters for both chains in the extra opt fields of each client. Use Extra Opts to define variables to be applied in Parity and Extra opts GETH to do the same with the official EF client, and hit \"Update environment variables\" More info on env vars for Parity client here and for Geth here MyCrypto You can now enter a decentralized version of MyCrypto that it is not only hosted in IPFS but is using your node to connect to the Ethereum network. However, note that as the access URL is not https there might be incompatibilities; we are working hard to solve this issue and give you an awesome user experience using MyCrypto in a decentralized way. You can access it in http://mycrypto.dappnode.eth/ . In desktop version there is no need to have an https access to connect to a node or connect to your hardware wallet. Metamask You also can use Metamask connected to your own node, not with the pre-set Metamask nodes. To configure your Metamask while connected to your DAppNode, just follow these steps: First, you must be connected to your DAppNode\u2019s VPN: Click \u201cMain network\u201d on top to the left. Click Custom RPC. \u201cNew RPC URL\u201d: http://my.ethchain.dnp.dappnode.eth:8545 or http://fullnode.dappnode:8545 Now you should be connected to \u201cPrivate Network\u201d and that\u2019s it! But... Do you want to be connected to a \"Private Network\" or to your DAppNode??? To edit the name showed at the upper right corner just hit advanced options under the URL of the Custom RPC and include DAppNode (or the name you want to have) in the field alias. IPFS When you install DAppNode an IPFS daemon is installed and your account is automatically created so you can start uploading and requesting the decentralized storage that the InterPlanetary File System offers. You can access the web ui entering http://ipfs.dappnode:5001/webui We have updated our IPFS package (v.0.1.6), and one of the features is to provide a more complete and user friendly web interfaz. The first time you access to it will ask you for your \u201cCustom API address\u201d, just fill the field with this address and you will be connected to your IPFS node , this is the input you have to enter in the field seen in the image below. /ip4/172.33.1.5/tcp/5001 If you want to automatically peer-connect two IPFS nodes, go to Connect with peers and send the link to your peer. Use this resource to mitigate slow IPFS propagation If you want to know a bit more on IPFS here you have a useful link ENS resolution When your device is connected to a #DAppNode, you can use \".eth\" domains that resolve to ipfs/swarm hashes. Note that your browsing device is connected to your DAppNode via VPN, and the VPN is configured to distinguish DNS or ENS traffic, to send only the ENS traffic through the DAppNode (make sure in your VPN config that you select the most adequate option for you, either not sending all the traffic through the VPN, only ETH traffic or all the traffic). When you access a .eth domain from your browser, the DAppNode uses the ETHFORWARD core package to resolve the .eth domain to a IPFS hash via ENS, then the DAppNode looks for the hashed content in IPFS and serves the content to your browser. Now you can seamlessly navigate ETH domains in a decentralized way. Advanced users bonus Have your own packages in your DAppNode You have two ways to install your own DNPs (DAppNode Packages): With their ENS name, i.e. kovan.dnp.dappnode.eth (a private repository controlled by our team) or yourpackage.public.dappnode.eth, a repository with free access is available so anyone can publish packages there. Ultimately any ENS name that resolves to an IPFS containing a valid manifest is acceptable. With an IPFS hash that contains a valid manifest, i.e. /ipfs/QmR28vMrQVkSLznCQF7G1eNPx3RBx27zKYpctwwgRAot9W So for development what we recommend is: Develop your package and test it locally Use the SDK to build it and upload it to IPFS Test the package by installing it with its IPFS link Once you are sure it works perfect, publish it to the open repository public.dappnode.eth. Please take a look at these refs regarding the SDK to deploy your own packages in your DAppNode: https://github.com/dappnode/DAppNodeSDK https://github.com/dappnode/DAppNode/wiki/DAppNode-Package-Development https://github.com/dappnode/DAppNode/wiki/DAppNode-packages-manifest How to decentralize wallet.ethereum.org with DAppNode In this section, we\u2019re going to explain how it\u2019s possible to decentralize wallet.ethereum.org using DAppNode and by decentralize we mean; distribute it\u2019s content through IPFS, making it possible to resolve via an ENS address. Our first step is to clone the wallet.ethereum.org repository and follow the steps of the official guide, here (this tutorial is based on this commit 6a6463b1a6aa615e4364592c12c933ee816fb28b . Here\u2019s a summary of the steps that we will need to follow: Install Meteor: $ curl https://install.meteor.com/ | sh $ git clone https://github.com/ethereum/meteor-dapp-wallet.git $ cd meteor-dapp-wallet/app $ npm install $ npm install -g meteor-build-client $ meteor-build-client ../build - path \"\" After following these steps we will have a folder called build with a deployable version of wallet.ethereum.org. In order for us to use the web inside DAppNode a site must be a static website that can be used directly from IPFS (another case would be a website with an accelerator or a DAppNode Package API installed to act as a backend). If we must make these modifications, the modifications will depend on each website and how it has been developed. meteor-dapp-wallet/app/client/lib/ethereum/1_web3Init.js Change: web3 = new Web3('ws://localhost:8546'); By: web3 = new Web3('ws://my.ethchain.dnp.dappnode.eth:8546'); After this step, the wallet will connect directly to our DAppNode, in case of not being able to go through MetaMask. meteor-dapp-wallet/app/client/lib/ethereum/observeTransactions.js In line 532 change: Session.get('network') == 'main' && By: Session.get('network') == 'centralized' && false && The reason we need to make this change is that we do not want the website to connect to centralized services like min-api.cryptocompare.com. Making this change means that we lose the functionality which converts the eth to other currencies, in future versions this service should be replaced by a decentralized service to get the exchange rate. meteor-dapp-wallet/app/client/lib/ethereum/walletConnector.js There seems to be a problem with the EthAccounts.init so we have to wrap line 86 try { EthAccounts.init(); } catch (err) { console.log(err); } Then comment EthTools on line 89, to avoid min-api.cryptocompare.com calls / EthTools.ticker.start({ extraParams: typeof mist !== 'undefined' ? 'Mist-' + mist.version : '',currencies: ['BTC', 'USD', 'EUR', 'BRL', 'GBP'] }); / meteor-dapp-wallet/app/client/routes.js To redirect on start to dashboard modify line 14: if (location.origin === 'file://') { To: if (location.origin === 'file://' || location.origin === 'http://my.ipfs.dnp.dappnode.eth:8080') { Solve SourceSansPro-ExtraLightIt error wget - O .. / build / packages / ethereum_dapp - styles / fonts / SourceSansPro - ExtraLightIt . otf https : // www . wfonts . com / download / data / 2015 / 10 / 11 / source - sans - pro - extralight / Source % 20 Sans % 20 Pro % 20 ExtraLight % 20 Italic . otf Once these steps are finished we\u2019re in a position to create a new build: $ meteor-build-client ../build \u2014 path \"\" Upload to IPFS When uploading content to IPFS we use a tool we have created that can be used if you are connected to DAppNode (this tool is currently experimental, and it is in continous improvement) or you could use the command ipfs add -r build . Using our tool the next steps would be: $ cd .. $ npm install -g @dappnode/ipfsuploader $ ipfsuploader build/ After executing the last command you will obtain a similar output (they will not be the same hashes) to this one: Qmb5oxJWf5Zw1UnvewkRM6V5qVbxWcY5s59FvhtWhC6F4Fbuild / i18n QmQV1tXNCZsD82LiLwWpHvdwWqbGXJd8q1Pq2hMPxyiKFabuild / packages / es5 - shim QmTte2i1HQKRgUgA8ZuVANwmqLCjjYzddmCekbUqJ3fmCAbuild / packages / ethereum_dapp - styles / fonts QmWMVompWymG8CmCgyB57dvaWegymjknMFTUQVrWfYebYubuild / packages / ethereum_dapp - styles / icons QmTCXm13p6PW7CnKegNqFP3mCgt8sAaNNteCJDjFiGP3Jmbuild / packages / ethereum_dapp - styles QmVvCPByChGfmEvxS2Nv6icKZSJ27aYqDSUzP2gta44XYbbuild / packages / ethereum_elements QmXQ6fGzJsDAUGuLFxG8wgMgvyvgnR6pW9yeue3VUtdHnebuild / packages QmTRpmNWiAkYQnesiGZRVE9NwbEfqZLH4DnLmbCmjMGaLLbuild / sockjs QmZQ3GzqXHCRM6uccP6TcZdPGPSyqJXyhwLETD2T2o8m73build If we use the hash associated with build and access it through this URL: http://my.ipfs.dnp.dappnode.eth:8080/ipfs/QmZQ3GzqXHCRM6uccP6TcZdPGPSyqJXyhwLETD2T2o8m73 The website is now distributed in IPFS! Point the ENS domain to the IPFS hash If you are the owner of an ENS domain you can make this point to the hash you want. We are going to use wallet.dappnode.eth for this example: Go to http://mycrypto.dappnode.eth/#contracts (if you don\u2019t have access to a DAppNode you can use the centralized alternative) https://mycrypto.com#contracts or https://www.myetherwallet.com/#contracts Select: ENS: Public Resolver 0x5FfC014343cd971B7eb70732021E26C35B744cc4 Access Go to https://etherscan.io/enslookup and search for wallet.dappnode.eth noting its NameHash (in this case 0x7407\u2026.8c02) setText node bytes 32: 0x7407156505d4facdb6474ccee4aac0c34679f5d6fddb603ab6e8976d8e138c02 key: dnslink value: /ipfs/QmZQ3GzqXHCRM6uccP6TcZdPGPSyqJXyhwLETD2T2o8m73 With these parameters we make the transaction in ethereum mainet and once it\u2019s mined the web will be accessible from that domain!","title":"What can you do with DAppNode?"},{"location":"what-can-you-do/#what-can-you-do-with-your-dappnode","text":"Enter https://my.admin.dnp.dappnode.eth to access DAppNode's admin interface. From DAppNode 0.2.0 you can also just type http://my.dappnode . Did we ever say that we wanted to make everything so easy...? Bear in mind that DAppNode's functionality will be limited until the Ethereum mainnet chain is synced (should take around 6~8 hours to get a warp sync). Now you can do things like for example: Navigate to a decentralized web decentral.eth Decentralized version of Mycrypto Decentralized version of ENS Manager Decentralized version of Wallet Gnosis Decentralized version of Oasis Direct and Eth2Dai Go to IPFS by entering http://ipfs.dappnode:5001/webui into your browser. You have a websocket of your parity node in ws://my.ethchain.dnp.dappnode.eth:8546 or ws://fullnode.dappnode:8546 and you can use http://fullnode.dappnode:8545 as a custom RPC to connect to metamask i.e. Info We have updated our IPFS package (v.0.1.4), and one of the features is to provide a more complete and user friendly web interface. The first time you access to it will ask you for your \u201cCustom API address\u201d, just fill the field with this address and you will be connected to your IPFS node , this is the input you have to enter in the field seen in the image below. / ip4 / 172 . 33 . 1 . 5 / tcp / 5001","title":"What can you do with your DAppNode?"},{"location":"what-can-you-do/#vpn-connection","text":"Now you have your own VPN service to privately connect to your DAppNode and also to provide access for your family and friends to connect to your installed nodes and to ETH domains through your DAppNode.","title":"VPN connection"},{"location":"what-can-you-do/#ethereum-client","text":"After a few hours of installing DAppNode you will have your own Ethereum fullnode running in your DAppNode. You have available your node websocket in ws://my.ethchain.dnp.dappnode.eth:8546 or ws//fullnode.dappnode:8546 and RPC connection through http://my.ethchain.dnp.dappnode.eth:8545 or http://fullnode.dappnode:8545 From version 0.2.7 Ethchain package allows the user to select the Ethereum client he wants to use as default of his DAppNode. The available clients are Parity, which is the default until version 0.2.7, and Geth, which is the client with which your full node will sync by default since v0.2.7. You can easily switch between them in the ethchain package screen, but please note that volumes where the chains are stored are different, so first time you switch from one to another the chain will have to sync. To switch the client just go to \u201c Packages / System Packages / Ethchain / Choose client\u201d and select your preferred option When you switch clients you can choose between removing the chain volume of the client you are moving from, or keep it so you can easily switch back again without the need of syncing the whole chain again. You can still set parameters for both chains in the extra opt fields of each client. Use Extra Opts to define variables to be applied in Parity and Extra opts GETH to do the same with the official EF client, and hit \"Update environment variables\" More info on env vars for Parity client here and for Geth here","title":"Ethereum client"},{"location":"what-can-you-do/#mycrypto","text":"You can now enter a decentralized version of MyCrypto that it is not only hosted in IPFS but is using your node to connect to the Ethereum network. However, note that as the access URL is not https there might be incompatibilities; we are working hard to solve this issue and give you an awesome user experience using MyCrypto in a decentralized way. You can access it in http://mycrypto.dappnode.eth/ . In desktop version there is no need to have an https access to connect to a node or connect to your hardware wallet.","title":"MyCrypto"},{"location":"what-can-you-do/#metamask","text":"You also can use Metamask connected to your own node, not with the pre-set Metamask nodes. To configure your Metamask while connected to your DAppNode, just follow these steps: First, you must be connected to your DAppNode\u2019s VPN: Click \u201cMain network\u201d on top to the left. Click Custom RPC. \u201cNew RPC URL\u201d: http://my.ethchain.dnp.dappnode.eth:8545 or http://fullnode.dappnode:8545 Now you should be connected to \u201cPrivate Network\u201d and that\u2019s it! But... Do you want to be connected to a \"Private Network\" or to your DAppNode??? To edit the name showed at the upper right corner just hit advanced options under the URL of the Custom RPC and include DAppNode (or the name you want to have) in the field alias.","title":"Metamask"},{"location":"what-can-you-do/#ipfs","text":"When you install DAppNode an IPFS daemon is installed and your account is automatically created so you can start uploading and requesting the decentralized storage that the InterPlanetary File System offers. You can access the web ui entering http://ipfs.dappnode:5001/webui We have updated our IPFS package (v.0.1.6), and one of the features is to provide a more complete and user friendly web interfaz. The first time you access to it will ask you for your \u201cCustom API address\u201d, just fill the field with this address and you will be connected to your IPFS node , this is the input you have to enter in the field seen in the image below. /ip4/172.33.1.5/tcp/5001 If you want to automatically peer-connect two IPFS nodes, go to Connect with peers and send the link to your peer. Use this resource to mitigate slow IPFS propagation If you want to know a bit more on IPFS here you have a useful link","title":"IPFS"},{"location":"what-can-you-do/#ens-resolution","text":"When your device is connected to a #DAppNode, you can use \".eth\" domains that resolve to ipfs/swarm hashes. Note that your browsing device is connected to your DAppNode via VPN, and the VPN is configured to distinguish DNS or ENS traffic, to send only the ENS traffic through the DAppNode (make sure in your VPN config that you select the most adequate option for you, either not sending all the traffic through the VPN, only ETH traffic or all the traffic). When you access a .eth domain from your browser, the DAppNode uses the ETHFORWARD core package to resolve the .eth domain to a IPFS hash via ENS, then the DAppNode looks for the hashed content in IPFS and serves the content to your browser. Now you can seamlessly navigate ETH domains in a decentralized way.","title":"ENS resolution"},{"location":"what-can-you-do/#advanced-users-bonus","text":"","title":"Advanced users bonus"},{"location":"what-can-you-do/#have-your-own-packages-in-your-dappnode","text":"You have two ways to install your own DNPs (DAppNode Packages): With their ENS name, i.e. kovan.dnp.dappnode.eth (a private repository controlled by our team) or yourpackage.public.dappnode.eth, a repository with free access is available so anyone can publish packages there. Ultimately any ENS name that resolves to an IPFS containing a valid manifest is acceptable. With an IPFS hash that contains a valid manifest, i.e. /ipfs/QmR28vMrQVkSLznCQF7G1eNPx3RBx27zKYpctwwgRAot9W So for development what we recommend is: Develop your package and test it locally Use the SDK to build it and upload it to IPFS Test the package by installing it with its IPFS link Once you are sure it works perfect, publish it to the open repository public.dappnode.eth. Please take a look at these refs regarding the SDK to deploy your own packages in your DAppNode: https://github.com/dappnode/DAppNodeSDK https://github.com/dappnode/DAppNode/wiki/DAppNode-Package-Development https://github.com/dappnode/DAppNode/wiki/DAppNode-packages-manifest","title":"Have your own packages in your DAppNode"},{"location":"what-can-you-do/#how-to-decentralize-walletethereumorg-with-dappnode","text":"In this section, we\u2019re going to explain how it\u2019s possible to decentralize wallet.ethereum.org using DAppNode and by decentralize we mean; distribute it\u2019s content through IPFS, making it possible to resolve via an ENS address. Our first step is to clone the wallet.ethereum.org repository and follow the steps of the official guide, here (this tutorial is based on this commit 6a6463b1a6aa615e4364592c12c933ee816fb28b . Here\u2019s a summary of the steps that we will need to follow:","title":"How to decentralize wallet.ethereum.org with DAppNode"},{"location":"what-can-you-do/#install-meteor","text":"$ curl https://install.meteor.com/ | sh $ git clone https://github.com/ethereum/meteor-dapp-wallet.git $ cd meteor-dapp-wallet/app $ npm install $ npm install -g meteor-build-client $ meteor-build-client ../build - path \"\" After following these steps we will have a folder called build with a deployable version of wallet.ethereum.org. In order for us to use the web inside DAppNode a site must be a static website that can be used directly from IPFS (another case would be a website with an accelerator or a DAppNode Package API installed to act as a backend). If we must make these modifications, the modifications will depend on each website and how it has been developed. meteor-dapp-wallet/app/client/lib/ethereum/1_web3Init.js Change: web3 = new Web3('ws://localhost:8546'); By: web3 = new Web3('ws://my.ethchain.dnp.dappnode.eth:8546'); After this step, the wallet will connect directly to our DAppNode, in case of not being able to go through MetaMask. meteor-dapp-wallet/app/client/lib/ethereum/observeTransactions.js In line 532 change: Session.get('network') == 'main' && By: Session.get('network') == 'centralized' && false && The reason we need to make this change is that we do not want the website to connect to centralized services like min-api.cryptocompare.com. Making this change means that we lose the functionality which converts the eth to other currencies, in future versions this service should be replaced by a decentralized service to get the exchange rate. meteor-dapp-wallet/app/client/lib/ethereum/walletConnector.js There seems to be a problem with the EthAccounts.init so we have to wrap line 86 try { EthAccounts.init(); } catch (err) { console.log(err); } Then comment EthTools on line 89, to avoid min-api.cryptocompare.com calls / EthTools.ticker.start({ extraParams: typeof mist !== 'undefined' ? 'Mist-' + mist.version : '',currencies: ['BTC', 'USD', 'EUR', 'BRL', 'GBP'] }); / meteor-dapp-wallet/app/client/routes.js To redirect on start to dashboard modify line 14: if (location.origin === 'file://') { To: if (location.origin === 'file://' || location.origin === 'http://my.ipfs.dnp.dappnode.eth:8080') { Solve SourceSansPro-ExtraLightIt error wget - O .. / build / packages / ethereum_dapp - styles / fonts / SourceSansPro - ExtraLightIt . otf https : // www . wfonts . com / download / data / 2015 / 10 / 11 / source - sans - pro - extralight / Source % 20 Sans % 20 Pro % 20 ExtraLight % 20 Italic . otf Once these steps are finished we\u2019re in a position to create a new build: $ meteor-build-client ../build \u2014 path \"\"","title":"Install Meteor:"},{"location":"what-can-you-do/#upload-to-ipfs","text":"When uploading content to IPFS we use a tool we have created that can be used if you are connected to DAppNode (this tool is currently experimental, and it is in continous improvement) or you could use the command ipfs add -r build . Using our tool the next steps would be: $ cd .. $ npm install -g @dappnode/ipfsuploader $ ipfsuploader build/ After executing the last command you will obtain a similar output (they will not be the same hashes) to this one: Qmb5oxJWf5Zw1UnvewkRM6V5qVbxWcY5s59FvhtWhC6F4Fbuild / i18n QmQV1tXNCZsD82LiLwWpHvdwWqbGXJd8q1Pq2hMPxyiKFabuild / packages / es5 - shim QmTte2i1HQKRgUgA8ZuVANwmqLCjjYzddmCekbUqJ3fmCAbuild / packages / ethereum_dapp - styles / fonts QmWMVompWymG8CmCgyB57dvaWegymjknMFTUQVrWfYebYubuild / packages / ethereum_dapp - styles / icons QmTCXm13p6PW7CnKegNqFP3mCgt8sAaNNteCJDjFiGP3Jmbuild / packages / ethereum_dapp - styles QmVvCPByChGfmEvxS2Nv6icKZSJ27aYqDSUzP2gta44XYbbuild / packages / ethereum_elements QmXQ6fGzJsDAUGuLFxG8wgMgvyvgnR6pW9yeue3VUtdHnebuild / packages QmTRpmNWiAkYQnesiGZRVE9NwbEfqZLH4DnLmbCmjMGaLLbuild / sockjs QmZQ3GzqXHCRM6uccP6TcZdPGPSyqJXyhwLETD2T2o8m73build If we use the hash associated with build and access it through this URL: http://my.ipfs.dnp.dappnode.eth:8080/ipfs/QmZQ3GzqXHCRM6uccP6TcZdPGPSyqJXyhwLETD2T2o8m73 The website is now distributed in IPFS!","title":"Upload to IPFS"},{"location":"what-can-you-do/#point-the-ens-domain-to-the-ipfs-hash","text":"If you are the owner of an ENS domain you can make this point to the hash you want. We are going to use wallet.dappnode.eth for this example: Go to http://mycrypto.dappnode.eth/#contracts (if you don\u2019t have access to a DAppNode you can use the centralized alternative) https://mycrypto.com#contracts or https://www.myetherwallet.com/#contracts Select: ENS: Public Resolver 0x5FfC014343cd971B7eb70732021E26C35B744cc4 Access Go to https://etherscan.io/enslookup and search for wallet.dappnode.eth noting its NameHash (in this case 0x7407\u2026.8c02) setText node bytes 32: 0x7407156505d4facdb6474ccee4aac0c34679f5d6fddb603ab6e8976d8e138c02 key: dnslink value: /ipfs/QmZQ3GzqXHCRM6uccP6TcZdPGPSyqJXyhwLETD2T2o8m73 With these parameters we make the transaction in ethereum mainet and once it\u2019s mined the web will be accessible from that domain!","title":"Point the ENS domain to the IPFS hash"}]}